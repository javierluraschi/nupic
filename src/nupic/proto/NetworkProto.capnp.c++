// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: NetworkProto.capnp

#include "NetworkProto.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<70> b_b414112f4b6b1b45 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     69,  27, 107,  75,  47,  17,  20, 180,
     19,   0,   0,   0,   1,   0,   0,   0,
      7, 207, 122,  72, 143,  10, 194, 190,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     78, 101, 116, 119, 111, 114, 107,  80,
    114, 111, 116, 111,  46,  99,  97, 112,
    110, 112,  58,  78, 101, 116, 119, 111,
    114, 107,  80, 114, 111, 116, 111,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 103, 105, 111, 110, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    244,  25,  21, 249, 202,  33, 106, 158,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    244,  25,  21, 249, 202,  33, 106, 158,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  39,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    195,  33, 218, 134, 227, 157, 113, 137,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 105, 110, 107, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    113, 158, 213, 121,  83, 147, 108, 161,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b414112f4b6b1b45 = b_b414112f4b6b1b45.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b414112f4b6b1b45[] = {
  &s_9e6a21caf91519f4,
  &s_a16c935379d59e71,
};
static const uint16_t m_b414112f4b6b1b45[] = {1, 0};
static const uint16_t i_b414112f4b6b1b45[] = {0, 1};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_b414112f4b6b1b45[] = {
  { 16777216,  ::Map< ::capnp::Text,  ::RegionProto>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_b414112f4b6b1b45 = {
  0xb414112f4b6b1b45, b_b414112f4b6b1b45.words, 70, d_b414112f4b6b1b45, m_b414112f4b6b1b45,
  2, 2, i_b414112f4b6b1b45, nullptr, nullptr, { &s_b414112f4b6b1b45, nullptr, bd_b414112f4b6b1b45, 0, sizeof(bd_b414112f4b6b1b45) / sizeof(bd_b414112f4b6b1b45[0]), nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// NetworkProto
constexpr uint16_t NetworkProto::_capnpPrivate::dataWordSize;
constexpr uint16_t NetworkProto::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind NetworkProto::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* NetworkProto::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



