// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Cells4.capnp

#pragma once

#include <capnp/generated-header-support.h>
#include <kj/windows-sanity.h>

#if CAPNP_VERSION != 7000
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include <nupic/proto/Cell.capnp.h>
#include <nupic/proto/RandomProto.capnp.h>
#include <nupic/proto/Segment.capnp.h>
#include <nupic/proto/SegmentUpdate.capnp.h>

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(f05a853537bc6df0);

}  // namespace schemas
}  // namespace capnp


struct Cells4Proto {
  Cells4Proto() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(f05a853537bc6df0, 14, 17)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class Cells4Proto::Reader {
public:
  typedef Cells4Proto Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint16_t getVersion() const;

  inline bool getOwnsMemory() const;

  inline bool hasRng() const;
  inline  ::RandomProto::Reader getRng() const;

  inline  ::uint32_t getNColumns() const;

  inline  ::uint32_t getNCellsPerCol() const;

  inline  ::uint32_t getActivationThreshold() const;

  inline  ::uint32_t getMinThreshold() const;

  inline  ::uint32_t getNewSynapseCount() const;

  inline  ::uint32_t getNIterations() const;

  inline  ::uint32_t getNLrnIterations() const;

  inline  ::uint32_t getSegUpdateValidDuration() const;

  inline float getInitSegFreq() const;

  inline float getPermInitial() const;

  inline float getPermConnected() const;

  inline float getPermMax() const;

  inline float getPermDec() const;

  inline float getPermInc() const;

  inline float getGlobalDecay() const;

  inline bool getDoPooling() const;

  inline  ::uint32_t getPamLength() const;

  inline  ::uint32_t getMaxInfBacktrack() const;

  inline  ::uint32_t getMaxLrnBacktrack() const;

  inline  ::uint32_t getMaxSeqLength() const;

  inline  ::uint32_t getLearnedSeqLength() const;

  inline float getAvgLearnedSeqLength() const;

  inline  ::uint32_t getMaxAge() const;

  inline  ::uint8_t getVerbosity() const;

  inline  ::uint32_t getMaxSegmentsPerCell() const;

  inline  ::uint32_t getMaxSynapsesPerSegment() const;

  inline bool getCheckSynapseConsistency() const;

  inline bool getResetCalled() const;

  inline float getAvgInputDensity() const;

  inline  ::uint32_t getPamCounter() const;

  inline bool hasLearnActiveStateT() const;
  inline  ::CStateProto::Reader getLearnActiveStateT() const;

  inline bool hasLearnActiveStateT1() const;
  inline  ::CStateProto::Reader getLearnActiveStateT1() const;

  inline bool hasLearnPredictedStateT() const;
  inline  ::CStateProto::Reader getLearnPredictedStateT() const;

  inline bool hasLearnPredictedStateT1() const;
  inline  ::CStateProto::Reader getLearnPredictedStateT1() const;

  inline bool hasCells() const;
  inline  ::capnp::List< ::CellProto,  ::capnp::Kind::STRUCT>::Reader getCells() const;

  inline bool hasSegmentUpdates() const;
  inline  ::capnp::List< ::SegmentUpdateProto,  ::capnp::Kind::STRUCT>::Reader getSegmentUpdates() const;

  inline bool hasInfActiveStateT() const;
  inline  ::CStateProto::Reader getInfActiveStateT() const;

  inline bool hasInfActiveStateT1() const;
  inline  ::CStateProto::Reader getInfActiveStateT1() const;

  inline bool hasInfPredictedStateT() const;
  inline  ::CStateProto::Reader getInfPredictedStateT() const;

  inline bool hasInfPredictedStateT1() const;
  inline  ::CStateProto::Reader getInfPredictedStateT1() const;

  inline bool hasCellConfidenceT() const;
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader getCellConfidenceT() const;

  inline bool hasCellConfidenceT1() const;
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader getCellConfidenceT1() const;

  inline bool hasColConfidenceT() const;
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader getColConfidenceT() const;

  inline bool hasColConfidenceT1() const;
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader getColConfidenceT1() const;

  inline bool hasPrevInfPatterns() const;
  inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader getPrevInfPatterns() const;

  inline bool hasPrevLrnPatterns() const;
  inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader getPrevLrnPatterns() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Cells4Proto::Builder {
public:
  typedef Cells4Proto Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint16_t getVersion();
  inline void setVersion( ::uint16_t value);

  inline bool getOwnsMemory();
  inline void setOwnsMemory(bool value);

  inline bool hasRng();
  inline  ::RandomProto::Builder getRng();
  inline void setRng( ::RandomProto::Reader value);
  inline  ::RandomProto::Builder initRng();
  inline void adoptRng(::capnp::Orphan< ::RandomProto>&& value);
  inline ::capnp::Orphan< ::RandomProto> disownRng();

  inline  ::uint32_t getNColumns();
  inline void setNColumns( ::uint32_t value);

  inline  ::uint32_t getNCellsPerCol();
  inline void setNCellsPerCol( ::uint32_t value);

  inline  ::uint32_t getActivationThreshold();
  inline void setActivationThreshold( ::uint32_t value);

  inline  ::uint32_t getMinThreshold();
  inline void setMinThreshold( ::uint32_t value);

  inline  ::uint32_t getNewSynapseCount();
  inline void setNewSynapseCount( ::uint32_t value);

  inline  ::uint32_t getNIterations();
  inline void setNIterations( ::uint32_t value);

  inline  ::uint32_t getNLrnIterations();
  inline void setNLrnIterations( ::uint32_t value);

  inline  ::uint32_t getSegUpdateValidDuration();
  inline void setSegUpdateValidDuration( ::uint32_t value);

  inline float getInitSegFreq();
  inline void setInitSegFreq(float value);

  inline float getPermInitial();
  inline void setPermInitial(float value);

  inline float getPermConnected();
  inline void setPermConnected(float value);

  inline float getPermMax();
  inline void setPermMax(float value);

  inline float getPermDec();
  inline void setPermDec(float value);

  inline float getPermInc();
  inline void setPermInc(float value);

  inline float getGlobalDecay();
  inline void setGlobalDecay(float value);

  inline bool getDoPooling();
  inline void setDoPooling(bool value);

  inline  ::uint32_t getPamLength();
  inline void setPamLength( ::uint32_t value);

  inline  ::uint32_t getMaxInfBacktrack();
  inline void setMaxInfBacktrack( ::uint32_t value);

  inline  ::uint32_t getMaxLrnBacktrack();
  inline void setMaxLrnBacktrack( ::uint32_t value);

  inline  ::uint32_t getMaxSeqLength();
  inline void setMaxSeqLength( ::uint32_t value);

  inline  ::uint32_t getLearnedSeqLength();
  inline void setLearnedSeqLength( ::uint32_t value);

  inline float getAvgLearnedSeqLength();
  inline void setAvgLearnedSeqLength(float value);

  inline  ::uint32_t getMaxAge();
  inline void setMaxAge( ::uint32_t value);

  inline  ::uint8_t getVerbosity();
  inline void setVerbosity( ::uint8_t value);

  inline  ::uint32_t getMaxSegmentsPerCell();
  inline void setMaxSegmentsPerCell( ::uint32_t value);

  inline  ::uint32_t getMaxSynapsesPerSegment();
  inline void setMaxSynapsesPerSegment( ::uint32_t value);

  inline bool getCheckSynapseConsistency();
  inline void setCheckSynapseConsistency(bool value);

  inline bool getResetCalled();
  inline void setResetCalled(bool value);

  inline float getAvgInputDensity();
  inline void setAvgInputDensity(float value);

  inline  ::uint32_t getPamCounter();
  inline void setPamCounter( ::uint32_t value);

  inline bool hasLearnActiveStateT();
  inline  ::CStateProto::Builder getLearnActiveStateT();
  inline void setLearnActiveStateT( ::CStateProto::Reader value);
  inline  ::CStateProto::Builder initLearnActiveStateT();
  inline void adoptLearnActiveStateT(::capnp::Orphan< ::CStateProto>&& value);
  inline ::capnp::Orphan< ::CStateProto> disownLearnActiveStateT();

  inline bool hasLearnActiveStateT1();
  inline  ::CStateProto::Builder getLearnActiveStateT1();
  inline void setLearnActiveStateT1( ::CStateProto::Reader value);
  inline  ::CStateProto::Builder initLearnActiveStateT1();
  inline void adoptLearnActiveStateT1(::capnp::Orphan< ::CStateProto>&& value);
  inline ::capnp::Orphan< ::CStateProto> disownLearnActiveStateT1();

  inline bool hasLearnPredictedStateT();
  inline  ::CStateProto::Builder getLearnPredictedStateT();
  inline void setLearnPredictedStateT( ::CStateProto::Reader value);
  inline  ::CStateProto::Builder initLearnPredictedStateT();
  inline void adoptLearnPredictedStateT(::capnp::Orphan< ::CStateProto>&& value);
  inline ::capnp::Orphan< ::CStateProto> disownLearnPredictedStateT();

  inline bool hasLearnPredictedStateT1();
  inline  ::CStateProto::Builder getLearnPredictedStateT1();
  inline void setLearnPredictedStateT1( ::CStateProto::Reader value);
  inline  ::CStateProto::Builder initLearnPredictedStateT1();
  inline void adoptLearnPredictedStateT1(::capnp::Orphan< ::CStateProto>&& value);
  inline ::capnp::Orphan< ::CStateProto> disownLearnPredictedStateT1();

  inline bool hasCells();
  inline  ::capnp::List< ::CellProto,  ::capnp::Kind::STRUCT>::Builder getCells();
  inline void setCells( ::capnp::List< ::CellProto,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::CellProto,  ::capnp::Kind::STRUCT>::Builder initCells(unsigned int size);
  inline void adoptCells(::capnp::Orphan< ::capnp::List< ::CellProto,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::CellProto,  ::capnp::Kind::STRUCT>> disownCells();

  inline bool hasSegmentUpdates();
  inline  ::capnp::List< ::SegmentUpdateProto,  ::capnp::Kind::STRUCT>::Builder getSegmentUpdates();
  inline void setSegmentUpdates( ::capnp::List< ::SegmentUpdateProto,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::SegmentUpdateProto,  ::capnp::Kind::STRUCT>::Builder initSegmentUpdates(unsigned int size);
  inline void adoptSegmentUpdates(::capnp::Orphan< ::capnp::List< ::SegmentUpdateProto,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::SegmentUpdateProto,  ::capnp::Kind::STRUCT>> disownSegmentUpdates();

  inline bool hasInfActiveStateT();
  inline  ::CStateProto::Builder getInfActiveStateT();
  inline void setInfActiveStateT( ::CStateProto::Reader value);
  inline  ::CStateProto::Builder initInfActiveStateT();
  inline void adoptInfActiveStateT(::capnp::Orphan< ::CStateProto>&& value);
  inline ::capnp::Orphan< ::CStateProto> disownInfActiveStateT();

  inline bool hasInfActiveStateT1();
  inline  ::CStateProto::Builder getInfActiveStateT1();
  inline void setInfActiveStateT1( ::CStateProto::Reader value);
  inline  ::CStateProto::Builder initInfActiveStateT1();
  inline void adoptInfActiveStateT1(::capnp::Orphan< ::CStateProto>&& value);
  inline ::capnp::Orphan< ::CStateProto> disownInfActiveStateT1();

  inline bool hasInfPredictedStateT();
  inline  ::CStateProto::Builder getInfPredictedStateT();
  inline void setInfPredictedStateT( ::CStateProto::Reader value);
  inline  ::CStateProto::Builder initInfPredictedStateT();
  inline void adoptInfPredictedStateT(::capnp::Orphan< ::CStateProto>&& value);
  inline ::capnp::Orphan< ::CStateProto> disownInfPredictedStateT();

  inline bool hasInfPredictedStateT1();
  inline  ::CStateProto::Builder getInfPredictedStateT1();
  inline void setInfPredictedStateT1( ::CStateProto::Reader value);
  inline  ::CStateProto::Builder initInfPredictedStateT1();
  inline void adoptInfPredictedStateT1(::capnp::Orphan< ::CStateProto>&& value);
  inline ::capnp::Orphan< ::CStateProto> disownInfPredictedStateT1();

  inline bool hasCellConfidenceT();
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder getCellConfidenceT();
  inline void setCellConfidenceT( ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setCellConfidenceT(::kj::ArrayPtr<const float> value);
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder initCellConfidenceT(unsigned int size);
  inline void adoptCellConfidenceT(::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>> disownCellConfidenceT();

  inline bool hasCellConfidenceT1();
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder getCellConfidenceT1();
  inline void setCellConfidenceT1( ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setCellConfidenceT1(::kj::ArrayPtr<const float> value);
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder initCellConfidenceT1(unsigned int size);
  inline void adoptCellConfidenceT1(::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>> disownCellConfidenceT1();

  inline bool hasColConfidenceT();
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder getColConfidenceT();
  inline void setColConfidenceT( ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setColConfidenceT(::kj::ArrayPtr<const float> value);
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder initColConfidenceT(unsigned int size);
  inline void adoptColConfidenceT(::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>> disownColConfidenceT();

  inline bool hasColConfidenceT1();
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder getColConfidenceT1();
  inline void setColConfidenceT1( ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setColConfidenceT1(::kj::ArrayPtr<const float> value);
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder initColConfidenceT1(unsigned int size);
  inline void adoptColConfidenceT1(::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>> disownColConfidenceT1();

  inline bool hasPrevInfPatterns();
  inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder getPrevInfPatterns();
  inline void setPrevInfPatterns( ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader value);
  inline void setPrevInfPatterns(::kj::ArrayPtr<const  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader> value);
  inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder initPrevInfPatterns(unsigned int size);
  inline void adoptPrevInfPatterns(::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>> disownPrevInfPatterns();

  inline bool hasPrevLrnPatterns();
  inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder getPrevLrnPatterns();
  inline void setPrevLrnPatterns( ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader value);
  inline void setPrevLrnPatterns(::kj::ArrayPtr<const  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader> value);
  inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder initPrevLrnPatterns(unsigned int size);
  inline void adoptPrevLrnPatterns(::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>> disownPrevLrnPatterns();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Cells4Proto::Pipeline {
public:
  typedef Cells4Proto Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::RandomProto::Pipeline getRng();
  inline  ::CStateProto::Pipeline getLearnActiveStateT();
  inline  ::CStateProto::Pipeline getLearnActiveStateT1();
  inline  ::CStateProto::Pipeline getLearnPredictedStateT();
  inline  ::CStateProto::Pipeline getLearnPredictedStateT1();
  inline  ::CStateProto::Pipeline getInfActiveStateT();
  inline  ::CStateProto::Pipeline getInfActiveStateT1();
  inline  ::CStateProto::Pipeline getInfPredictedStateT();
  inline  ::CStateProto::Pipeline getInfPredictedStateT1();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline  ::uint16_t Cells4Proto::Reader::getVersion() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t Cells4Proto::Builder::getVersion() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setVersion( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool Cells4Proto::Reader::getOwnsMemory() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}

inline bool Cells4Proto::Builder::getOwnsMemory() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setOwnsMemory(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS, value);
}

inline bool Cells4Proto::Reader::hasRng() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool Cells4Proto::Builder::hasRng() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::RandomProto::Reader Cells4Proto::Reader::getRng() const {
  return ::capnp::_::PointerHelpers< ::RandomProto>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::RandomProto::Builder Cells4Proto::Builder::getRng() {
  return ::capnp::_::PointerHelpers< ::RandomProto>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::RandomProto::Pipeline Cells4Proto::Pipeline::getRng() {
  return  ::RandomProto::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void Cells4Proto::Builder::setRng( ::RandomProto::Reader value) {
  ::capnp::_::PointerHelpers< ::RandomProto>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::RandomProto::Builder Cells4Proto::Builder::initRng() {
  return ::capnp::_::PointerHelpers< ::RandomProto>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void Cells4Proto::Builder::adoptRng(
    ::capnp::Orphan< ::RandomProto>&& value) {
  ::capnp::_::PointerHelpers< ::RandomProto>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::RandomProto> Cells4Proto::Builder::disownRng() {
  return ::capnp::_::PointerHelpers< ::RandomProto>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline  ::uint32_t Cells4Proto::Reader::getNColumns() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t Cells4Proto::Builder::getNColumns() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setNColumns( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t Cells4Proto::Reader::getNCellsPerCol() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t Cells4Proto::Builder::getNCellsPerCol() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setNCellsPerCol( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t Cells4Proto::Reader::getActivationThreshold() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t Cells4Proto::Builder::getActivationThreshold() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setActivationThreshold( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t Cells4Proto::Reader::getMinThreshold() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t Cells4Proto::Builder::getMinThreshold() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setMinThreshold( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t Cells4Proto::Reader::getNewSynapseCount() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t Cells4Proto::Builder::getNewSynapseCount() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setNewSynapseCount( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t Cells4Proto::Reader::getNIterations() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t Cells4Proto::Builder::getNIterations() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setNIterations( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t Cells4Proto::Reader::getNLrnIterations() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t Cells4Proto::Builder::getNLrnIterations() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setNLrnIterations( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t Cells4Proto::Reader::getSegUpdateValidDuration() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t Cells4Proto::Builder::getSegUpdateValidDuration() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setSegUpdateValidDuration( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline float Cells4Proto::Reader::getInitSegFreq() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline float Cells4Proto::Builder::getInitSegFreq() {
  return _builder.getDataField<float>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setInitSegFreq(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline float Cells4Proto::Reader::getPermInitial() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline float Cells4Proto::Builder::getPermInitial() {
  return _builder.getDataField<float>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setPermInitial(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline float Cells4Proto::Reader::getPermConnected() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline float Cells4Proto::Builder::getPermConnected() {
  return _builder.getDataField<float>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setPermConnected(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline float Cells4Proto::Reader::getPermMax() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}

inline float Cells4Proto::Builder::getPermMax() {
  return _builder.getDataField<float>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setPermMax(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS, value);
}

inline float Cells4Proto::Reader::getPermDec() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}

inline float Cells4Proto::Builder::getPermDec() {
  return _builder.getDataField<float>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setPermDec(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS, value);
}

inline float Cells4Proto::Reader::getPermInc() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}

inline float Cells4Proto::Builder::getPermInc() {
  return _builder.getDataField<float>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setPermInc(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS, value);
}

inline float Cells4Proto::Reader::getGlobalDecay() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}

inline float Cells4Proto::Builder::getGlobalDecay() {
  return _builder.getDataField<float>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setGlobalDecay(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS, value);
}

inline bool Cells4Proto::Reader::getDoPooling() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}

inline bool Cells4Proto::Builder::getDoPooling() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setDoPooling(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t Cells4Proto::Reader::getPamLength() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t Cells4Proto::Builder::getPamLength() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setPamLength( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t Cells4Proto::Reader::getMaxInfBacktrack() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t Cells4Proto::Builder::getMaxInfBacktrack() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setMaxInfBacktrack( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t Cells4Proto::Reader::getMaxLrnBacktrack() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t Cells4Proto::Builder::getMaxLrnBacktrack() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setMaxLrnBacktrack( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t Cells4Proto::Reader::getMaxSeqLength() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t Cells4Proto::Builder::getMaxSeqLength() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setMaxSeqLength( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t Cells4Proto::Reader::getLearnedSeqLength() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<20>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t Cells4Proto::Builder::getLearnedSeqLength() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<20>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setLearnedSeqLength( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<20>() * ::capnp::ELEMENTS, value);
}

inline float Cells4Proto::Reader::getAvgLearnedSeqLength() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<21>() * ::capnp::ELEMENTS);
}

inline float Cells4Proto::Builder::getAvgLearnedSeqLength() {
  return _builder.getDataField<float>(
      ::capnp::bounded<21>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setAvgLearnedSeqLength(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<21>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t Cells4Proto::Reader::getMaxAge() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t Cells4Proto::Builder::getMaxAge() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setMaxAge( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Cells4Proto::Reader::getVerbosity() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Cells4Proto::Builder::getVerbosity() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setVerbosity( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t Cells4Proto::Reader::getMaxSegmentsPerCell() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t Cells4Proto::Builder::getMaxSegmentsPerCell() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setMaxSegmentsPerCell( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t Cells4Proto::Reader::getMaxSynapsesPerSegment() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t Cells4Proto::Builder::getMaxSynapsesPerSegment() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setMaxSynapsesPerSegment( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS, value);
}

inline bool Cells4Proto::Reader::getCheckSynapseConsistency() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}

inline bool Cells4Proto::Builder::getCheckSynapseConsistency() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setCheckSynapseConsistency(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS, value);
}

inline bool Cells4Proto::Reader::getResetCalled() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}

inline bool Cells4Proto::Builder::getResetCalled() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setResetCalled(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS, value);
}

inline float Cells4Proto::Reader::getAvgInputDensity() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<25>() * ::capnp::ELEMENTS);
}

inline float Cells4Proto::Builder::getAvgInputDensity() {
  return _builder.getDataField<float>(
      ::capnp::bounded<25>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setAvgInputDensity(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<25>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t Cells4Proto::Reader::getPamCounter() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<26>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t Cells4Proto::Builder::getPamCounter() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<26>() * ::capnp::ELEMENTS);
}
inline void Cells4Proto::Builder::setPamCounter( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<26>() * ::capnp::ELEMENTS, value);
}

inline bool Cells4Proto::Reader::hasLearnActiveStateT() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool Cells4Proto::Builder::hasLearnActiveStateT() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::CStateProto::Reader Cells4Proto::Reader::getLearnActiveStateT() const {
  return ::capnp::_::PointerHelpers< ::CStateProto>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::CStateProto::Builder Cells4Proto::Builder::getLearnActiveStateT() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::CStateProto::Pipeline Cells4Proto::Pipeline::getLearnActiveStateT() {
  return  ::CStateProto::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void Cells4Proto::Builder::setLearnActiveStateT( ::CStateProto::Reader value) {
  ::capnp::_::PointerHelpers< ::CStateProto>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::CStateProto::Builder Cells4Proto::Builder::initLearnActiveStateT() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void Cells4Proto::Builder::adoptLearnActiveStateT(
    ::capnp::Orphan< ::CStateProto>&& value) {
  ::capnp::_::PointerHelpers< ::CStateProto>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::CStateProto> Cells4Proto::Builder::disownLearnActiveStateT() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool Cells4Proto::Reader::hasLearnActiveStateT1() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool Cells4Proto::Builder::hasLearnActiveStateT1() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::CStateProto::Reader Cells4Proto::Reader::getLearnActiveStateT1() const {
  return ::capnp::_::PointerHelpers< ::CStateProto>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::CStateProto::Builder Cells4Proto::Builder::getLearnActiveStateT1() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::CStateProto::Pipeline Cells4Proto::Pipeline::getLearnActiveStateT1() {
  return  ::CStateProto::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void Cells4Proto::Builder::setLearnActiveStateT1( ::CStateProto::Reader value) {
  ::capnp::_::PointerHelpers< ::CStateProto>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::CStateProto::Builder Cells4Proto::Builder::initLearnActiveStateT1() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void Cells4Proto::Builder::adoptLearnActiveStateT1(
    ::capnp::Orphan< ::CStateProto>&& value) {
  ::capnp::_::PointerHelpers< ::CStateProto>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::CStateProto> Cells4Proto::Builder::disownLearnActiveStateT1() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool Cells4Proto::Reader::hasLearnPredictedStateT() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool Cells4Proto::Builder::hasLearnPredictedStateT() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::CStateProto::Reader Cells4Proto::Reader::getLearnPredictedStateT() const {
  return ::capnp::_::PointerHelpers< ::CStateProto>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::CStateProto::Builder Cells4Proto::Builder::getLearnPredictedStateT() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::CStateProto::Pipeline Cells4Proto::Pipeline::getLearnPredictedStateT() {
  return  ::CStateProto::Pipeline(_typeless.getPointerField(3));
}
#endif  // !CAPNP_LITE
inline void Cells4Proto::Builder::setLearnPredictedStateT( ::CStateProto::Reader value) {
  ::capnp::_::PointerHelpers< ::CStateProto>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::CStateProto::Builder Cells4Proto::Builder::initLearnPredictedStateT() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void Cells4Proto::Builder::adoptLearnPredictedStateT(
    ::capnp::Orphan< ::CStateProto>&& value) {
  ::capnp::_::PointerHelpers< ::CStateProto>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::CStateProto> Cells4Proto::Builder::disownLearnPredictedStateT() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline bool Cells4Proto::Reader::hasLearnPredictedStateT1() const {
  return !_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline bool Cells4Proto::Builder::hasLearnPredictedStateT1() {
  return !_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline  ::CStateProto::Reader Cells4Proto::Reader::getLearnPredictedStateT1() const {
  return ::capnp::_::PointerHelpers< ::CStateProto>::get(_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline  ::CStateProto::Builder Cells4Proto::Builder::getLearnPredictedStateT1() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::get(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::CStateProto::Pipeline Cells4Proto::Pipeline::getLearnPredictedStateT1() {
  return  ::CStateProto::Pipeline(_typeless.getPointerField(4));
}
#endif  // !CAPNP_LITE
inline void Cells4Proto::Builder::setLearnPredictedStateT1( ::CStateProto::Reader value) {
  ::capnp::_::PointerHelpers< ::CStateProto>::set(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), value);
}
inline  ::CStateProto::Builder Cells4Proto::Builder::initLearnPredictedStateT1() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::init(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline void Cells4Proto::Builder::adoptLearnPredictedStateT1(
    ::capnp::Orphan< ::CStateProto>&& value) {
  ::capnp::_::PointerHelpers< ::CStateProto>::adopt(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::CStateProto> Cells4Proto::Builder::disownLearnPredictedStateT1() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::disown(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}

inline bool Cells4Proto::Reader::hasCells() const {
  return !_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline bool Cells4Proto::Builder::hasCells() {
  return !_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::CellProto,  ::capnp::Kind::STRUCT>::Reader Cells4Proto::Reader::getCells() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::CellProto,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::CellProto,  ::capnp::Kind::STRUCT>::Builder Cells4Proto::Builder::getCells() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::CellProto,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline void Cells4Proto::Builder::setCells( ::capnp::List< ::CellProto,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::CellProto,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::CellProto,  ::capnp::Kind::STRUCT>::Builder Cells4Proto::Builder::initCells(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::CellProto,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), size);
}
inline void Cells4Proto::Builder::adoptCells(
    ::capnp::Orphan< ::capnp::List< ::CellProto,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::CellProto,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::CellProto,  ::capnp::Kind::STRUCT>> Cells4Proto::Builder::disownCells() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::CellProto,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}

inline bool Cells4Proto::Reader::hasSegmentUpdates() const {
  return !_reader.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS).isNull();
}
inline bool Cells4Proto::Builder::hasSegmentUpdates() {
  return !_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::SegmentUpdateProto,  ::capnp::Kind::STRUCT>::Reader Cells4Proto::Reader::getSegmentUpdates() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::SegmentUpdateProto,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::SegmentUpdateProto,  ::capnp::Kind::STRUCT>::Builder Cells4Proto::Builder::getSegmentUpdates() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::SegmentUpdateProto,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
inline void Cells4Proto::Builder::setSegmentUpdates( ::capnp::List< ::SegmentUpdateProto,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::SegmentUpdateProto,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::SegmentUpdateProto,  ::capnp::Kind::STRUCT>::Builder Cells4Proto::Builder::initSegmentUpdates(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::SegmentUpdateProto,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), size);
}
inline void Cells4Proto::Builder::adoptSegmentUpdates(
    ::capnp::Orphan< ::capnp::List< ::SegmentUpdateProto,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::SegmentUpdateProto,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::SegmentUpdateProto,  ::capnp::Kind::STRUCT>> Cells4Proto::Builder::disownSegmentUpdates() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::SegmentUpdateProto,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}

inline bool Cells4Proto::Reader::hasInfActiveStateT() const {
  return !_reader.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS).isNull();
}
inline bool Cells4Proto::Builder::hasInfActiveStateT() {
  return !_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS).isNull();
}
inline  ::CStateProto::Reader Cells4Proto::Reader::getInfActiveStateT() const {
  return ::capnp::_::PointerHelpers< ::CStateProto>::get(_reader.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
inline  ::CStateProto::Builder Cells4Proto::Builder::getInfActiveStateT() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::get(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::CStateProto::Pipeline Cells4Proto::Pipeline::getInfActiveStateT() {
  return  ::CStateProto::Pipeline(_typeless.getPointerField(7));
}
#endif  // !CAPNP_LITE
inline void Cells4Proto::Builder::setInfActiveStateT( ::CStateProto::Reader value) {
  ::capnp::_::PointerHelpers< ::CStateProto>::set(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS), value);
}
inline  ::CStateProto::Builder Cells4Proto::Builder::initInfActiveStateT() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::init(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
inline void Cells4Proto::Builder::adoptInfActiveStateT(
    ::capnp::Orphan< ::CStateProto>&& value) {
  ::capnp::_::PointerHelpers< ::CStateProto>::adopt(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::CStateProto> Cells4Proto::Builder::disownInfActiveStateT() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::disown(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}

inline bool Cells4Proto::Reader::hasInfActiveStateT1() const {
  return !_reader.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS).isNull();
}
inline bool Cells4Proto::Builder::hasInfActiveStateT1() {
  return !_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS).isNull();
}
inline  ::CStateProto::Reader Cells4Proto::Reader::getInfActiveStateT1() const {
  return ::capnp::_::PointerHelpers< ::CStateProto>::get(_reader.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
inline  ::CStateProto::Builder Cells4Proto::Builder::getInfActiveStateT1() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::get(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::CStateProto::Pipeline Cells4Proto::Pipeline::getInfActiveStateT1() {
  return  ::CStateProto::Pipeline(_typeless.getPointerField(8));
}
#endif  // !CAPNP_LITE
inline void Cells4Proto::Builder::setInfActiveStateT1( ::CStateProto::Reader value) {
  ::capnp::_::PointerHelpers< ::CStateProto>::set(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS), value);
}
inline  ::CStateProto::Builder Cells4Proto::Builder::initInfActiveStateT1() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::init(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
inline void Cells4Proto::Builder::adoptInfActiveStateT1(
    ::capnp::Orphan< ::CStateProto>&& value) {
  ::capnp::_::PointerHelpers< ::CStateProto>::adopt(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::CStateProto> Cells4Proto::Builder::disownInfActiveStateT1() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::disown(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}

inline bool Cells4Proto::Reader::hasInfPredictedStateT() const {
  return !_reader.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS).isNull();
}
inline bool Cells4Proto::Builder::hasInfPredictedStateT() {
  return !_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS).isNull();
}
inline  ::CStateProto::Reader Cells4Proto::Reader::getInfPredictedStateT() const {
  return ::capnp::_::PointerHelpers< ::CStateProto>::get(_reader.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}
inline  ::CStateProto::Builder Cells4Proto::Builder::getInfPredictedStateT() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::get(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::CStateProto::Pipeline Cells4Proto::Pipeline::getInfPredictedStateT() {
  return  ::CStateProto::Pipeline(_typeless.getPointerField(9));
}
#endif  // !CAPNP_LITE
inline void Cells4Proto::Builder::setInfPredictedStateT( ::CStateProto::Reader value) {
  ::capnp::_::PointerHelpers< ::CStateProto>::set(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS), value);
}
inline  ::CStateProto::Builder Cells4Proto::Builder::initInfPredictedStateT() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::init(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}
inline void Cells4Proto::Builder::adoptInfPredictedStateT(
    ::capnp::Orphan< ::CStateProto>&& value) {
  ::capnp::_::PointerHelpers< ::CStateProto>::adopt(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::CStateProto> Cells4Proto::Builder::disownInfPredictedStateT() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::disown(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}

inline bool Cells4Proto::Reader::hasInfPredictedStateT1() const {
  return !_reader.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS).isNull();
}
inline bool Cells4Proto::Builder::hasInfPredictedStateT1() {
  return !_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS).isNull();
}
inline  ::CStateProto::Reader Cells4Proto::Reader::getInfPredictedStateT1() const {
  return ::capnp::_::PointerHelpers< ::CStateProto>::get(_reader.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}
inline  ::CStateProto::Builder Cells4Proto::Builder::getInfPredictedStateT1() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::get(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::CStateProto::Pipeline Cells4Proto::Pipeline::getInfPredictedStateT1() {
  return  ::CStateProto::Pipeline(_typeless.getPointerField(10));
}
#endif  // !CAPNP_LITE
inline void Cells4Proto::Builder::setInfPredictedStateT1( ::CStateProto::Reader value) {
  ::capnp::_::PointerHelpers< ::CStateProto>::set(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS), value);
}
inline  ::CStateProto::Builder Cells4Proto::Builder::initInfPredictedStateT1() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::init(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}
inline void Cells4Proto::Builder::adoptInfPredictedStateT1(
    ::capnp::Orphan< ::CStateProto>&& value) {
  ::capnp::_::PointerHelpers< ::CStateProto>::adopt(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::CStateProto> Cells4Proto::Builder::disownInfPredictedStateT1() {
  return ::capnp::_::PointerHelpers< ::CStateProto>::disown(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}

inline bool Cells4Proto::Reader::hasCellConfidenceT() const {
  return !_reader.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS).isNull();
}
inline bool Cells4Proto::Builder::hasCellConfidenceT() {
  return !_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader Cells4Proto::Reader::getCellConfidenceT() const {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS));
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder Cells4Proto::Builder::getCellConfidenceT() {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS));
}
inline void Cells4Proto::Builder::setCellConfidenceT( ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS), value);
}
inline void Cells4Proto::Builder::setCellConfidenceT(::kj::ArrayPtr<const float> value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder Cells4Proto::Builder::initCellConfidenceT(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS), size);
}
inline void Cells4Proto::Builder::adoptCellConfidenceT(
    ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>> Cells4Proto::Builder::disownCellConfidenceT() {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS));
}

inline bool Cells4Proto::Reader::hasCellConfidenceT1() const {
  return !_reader.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS).isNull();
}
inline bool Cells4Proto::Builder::hasCellConfidenceT1() {
  return !_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader Cells4Proto::Reader::getCellConfidenceT1() const {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS));
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder Cells4Proto::Builder::getCellConfidenceT1() {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS));
}
inline void Cells4Proto::Builder::setCellConfidenceT1( ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS), value);
}
inline void Cells4Proto::Builder::setCellConfidenceT1(::kj::ArrayPtr<const float> value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder Cells4Proto::Builder::initCellConfidenceT1(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS), size);
}
inline void Cells4Proto::Builder::adoptCellConfidenceT1(
    ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>> Cells4Proto::Builder::disownCellConfidenceT1() {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS));
}

inline bool Cells4Proto::Reader::hasColConfidenceT() const {
  return !_reader.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS).isNull();
}
inline bool Cells4Proto::Builder::hasColConfidenceT() {
  return !_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader Cells4Proto::Reader::getColConfidenceT() const {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS));
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder Cells4Proto::Builder::getColConfidenceT() {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS));
}
inline void Cells4Proto::Builder::setColConfidenceT( ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS), value);
}
inline void Cells4Proto::Builder::setColConfidenceT(::kj::ArrayPtr<const float> value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder Cells4Proto::Builder::initColConfidenceT(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS), size);
}
inline void Cells4Proto::Builder::adoptColConfidenceT(
    ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>> Cells4Proto::Builder::disownColConfidenceT() {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS));
}

inline bool Cells4Proto::Reader::hasColConfidenceT1() const {
  return !_reader.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS).isNull();
}
inline bool Cells4Proto::Builder::hasColConfidenceT1() {
  return !_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader Cells4Proto::Reader::getColConfidenceT1() const {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS));
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder Cells4Proto::Builder::getColConfidenceT1() {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS));
}
inline void Cells4Proto::Builder::setColConfidenceT1( ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS), value);
}
inline void Cells4Proto::Builder::setColConfidenceT1(::kj::ArrayPtr<const float> value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder Cells4Proto::Builder::initColConfidenceT1(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS), size);
}
inline void Cells4Proto::Builder::adoptColConfidenceT1(
    ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>> Cells4Proto::Builder::disownColConfidenceT1() {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS));
}

inline bool Cells4Proto::Reader::hasPrevInfPatterns() const {
  return !_reader.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS).isNull();
}
inline bool Cells4Proto::Builder::hasPrevInfPatterns() {
  return !_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader Cells4Proto::Reader::getPrevInfPatterns() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::get(_reader.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder Cells4Proto::Builder::getPrevInfPatterns() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::get(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS));
}
inline void Cells4Proto::Builder::setPrevInfPatterns( ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::set(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS), value);
}
inline void Cells4Proto::Builder::setPrevInfPatterns(::kj::ArrayPtr<const  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::set(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder Cells4Proto::Builder::initPrevInfPatterns(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::init(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS), size);
}
inline void Cells4Proto::Builder::adoptPrevInfPatterns(
    ::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::adopt(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>> Cells4Proto::Builder::disownPrevInfPatterns() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::disown(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS));
}

inline bool Cells4Proto::Reader::hasPrevLrnPatterns() const {
  return !_reader.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS).isNull();
}
inline bool Cells4Proto::Builder::hasPrevLrnPatterns() {
  return !_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader Cells4Proto::Reader::getPrevLrnPatterns() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::get(_reader.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder Cells4Proto::Builder::getPrevLrnPatterns() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::get(_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS));
}
inline void Cells4Proto::Builder::setPrevLrnPatterns( ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::set(_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS), value);
}
inline void Cells4Proto::Builder::setPrevLrnPatterns(::kj::ArrayPtr<const  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::set(_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder Cells4Proto::Builder::initPrevLrnPatterns(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::init(_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS), size);
}
inline void Cells4Proto::Builder::adoptPrevLrnPatterns(
    ::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::adopt(_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>> Cells4Proto::Builder::disownPrevLrnPatterns() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::disown(_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS));
}


