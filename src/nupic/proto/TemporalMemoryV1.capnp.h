// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: TemporalMemoryV1.capnp

#pragma once

#include <capnp/generated-header-support.h>
#include <kj/windows-sanity.h>

#if CAPNP_VERSION != 7000
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include <nupic/proto/RandomProto.capnp.h>

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(f3154658a3245208);
CAPNP_DECLARE_SCHEMA(b72c5ada37a07fa1);
CAPNP_DECLARE_SCHEMA(9eae93d561b8cda9);
CAPNP_DECLARE_SCHEMA(8dd3451d4e7dbe83);
CAPNP_DECLARE_SCHEMA(b5dd50517b3dd4f2);

}  // namespace schemas
}  // namespace capnp


struct TemporalMemoryV1Proto {
  TemporalMemoryV1Proto() = delete;

  class Reader;
  class Builder;
  class Pipeline;
  struct Cell;
  struct Segment;
  struct Synapse;
  struct SegmentUpdate;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(f3154658a3245208, 22, 22)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct TemporalMemoryV1Proto::Cell {
  Cell() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(b72c5ada37a07fa1, 0, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct TemporalMemoryV1Proto::Segment {
  Segment() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(9eae93d561b8cda9, 5, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct TemporalMemoryV1Proto::Synapse {
  Synapse() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(8dd3451d4e7dbe83, 2, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct TemporalMemoryV1Proto::SegmentUpdate {
  SegmentUpdate() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(b5dd50517b3dd4f2, 2, 2)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class TemporalMemoryV1Proto::Reader {
public:
  typedef TemporalMemoryV1Proto Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getVerbosity() const;

  inline bool hasRandom() const;
  inline  ::RandomProto::Reader getRandom() const;

  inline  ::uint32_t getNumberOfCols() const;

  inline  ::uint32_t getCellsPerColumn() const;

  inline  ::int32_t getMaxSegmentsPerCell() const;

  inline  ::uint32_t getActivationThreshold() const;

  inline  ::uint32_t getMinThreshold() const;

  inline  ::uint32_t getSegUpdateValidDuration() const;

  inline  ::uint32_t getNewSynapseCount() const;

  inline  ::int32_t getMaxSynapsesPerSegment() const;

  inline float getInitSegFreq() const;

  inline float getInitialPerm() const;

  inline float getConnectedPerm() const;

  inline float getPermanenceMax() const;

  inline float getPermanenceDec() const;

  inline float getPermanenceInc() const;

  inline bool getCheckSynapseConsistency() const;

  inline bool getDoPooling() const;

  inline float getGlobalDecay() const;

  inline  ::uint32_t getMaxAge() const;

  inline  ::uint32_t getMaxInfBacktrack() const;

  inline  ::uint32_t getMaxLrnBacktrack() const;

  inline  ::uint32_t getPamLength() const;

  inline  ::uint32_t getPamCounter() const;

  inline  ::uint32_t getLearnedSeqLength() const;

  inline float getAvgLearnedSeqLength() const;

  inline  ::uint32_t getMaxSeqLength() const;

  inline float getAvgInputDensity() const;

  inline bool hasOutputType() const;
  inline  ::capnp::Text::Reader getOutputType() const;

  inline  ::uint32_t getBurnIn() const;

  inline bool getCollectStats() const;

  inline bool getCollectSequenceStats() const;

  inline  ::uint32_t getIterationIdx() const;

  inline  ::uint32_t getLrnIterationIdx() const;

  inline bool getResetCalled() const;

  inline  ::uint32_t getNextSegIdx() const;

  inline bool hasCells() const;
  inline  ::capnp::List< ::TemporalMemoryV1Proto::Cell,  ::capnp::Kind::STRUCT>::Reader getCells() const;

  inline bool hasSegmentUpdates() const;
  inline  ::capnp::List< ::TemporalMemoryV1Proto::SegmentUpdate,  ::capnp::Kind::STRUCT>::Reader getSegmentUpdates() const;

  inline bool getOwnsMemory() const;

  inline bool hasLrnActiveStateT1() const;
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader getLrnActiveStateT1() const;

  inline bool hasLrnActiveStateT() const;
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader getLrnActiveStateT() const;

  inline bool hasLrnPredictedStateT1() const;
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader getLrnPredictedStateT1() const;

  inline bool hasLrnPredictedStateT() const;
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader getLrnPredictedStateT() const;

  inline bool hasInfActiveStateT1() const;
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader getInfActiveStateT1() const;

  inline bool hasInfActiveStateT() const;
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader getInfActiveStateT() const;

  inline bool hasInfActiveStateBackup() const;
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader getInfActiveStateBackup() const;

  inline bool hasInfActiveStateCandidate() const;
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader getInfActiveStateCandidate() const;

  inline bool hasInfPredictedStateT1() const;
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader getInfPredictedStateT1() const;

  inline bool hasInfPredictedStateT() const;
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader getInfPredictedStateT() const;

  inline bool hasCellConfidenceT1() const;
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader getCellConfidenceT1() const;

  inline bool hasCellConfidenceT() const;
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader getCellConfidenceT() const;

  inline bool hasColConfidenceT1() const;
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader getColConfidenceT1() const;

  inline bool hasColConfidenceT() const;
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader getColConfidenceT() const;

  inline bool hasPrevLrnPatterns() const;
  inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader getPrevLrnPatterns() const;

  inline bool hasPrevInfPatterns() const;
  inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader getPrevInfPatterns() const;

  inline  ::uint32_t getStatsNumInfersSinceReset() const;

  inline  ::uint32_t getStatsNumPredictions() const;

  inline float getStatsCurPredictionScore2() const;

  inline float getStatsPredictionScoreTotal2() const;

  inline float getStatsCurFalseNegativeScore() const;

  inline float getStatsFalseNegativeScoreTotal() const;

  inline float getStatsCurFalsePositiveScore() const;

  inline float getStatsFalsePositiveScoreTotal() const;

  inline float getStatsPctExtraTotal() const;

  inline float getStatsPctMissingTotal() const;

  inline  ::uint32_t getStatsCurMissing() const;

  inline  ::uint32_t getStatsCurExtra() const;

  inline  ::uint32_t getStatsTotalMissing() const;

  inline  ::uint32_t getStatsTotalExtra() const;

  inline bool hasStatsPrevSequenceSignature() const;
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader getStatsPrevSequenceSignature() const;

  inline bool hasStatsConfHistogram() const;
  inline  ::capnp::List< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader getStatsConfHistogram() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class TemporalMemoryV1Proto::Builder {
public:
  typedef TemporalMemoryV1Proto Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getVerbosity();
  inline void setVerbosity( ::uint8_t value);

  inline bool hasRandom();
  inline  ::RandomProto::Builder getRandom();
  inline void setRandom( ::RandomProto::Reader value);
  inline  ::RandomProto::Builder initRandom();
  inline void adoptRandom(::capnp::Orphan< ::RandomProto>&& value);
  inline ::capnp::Orphan< ::RandomProto> disownRandom();

  inline  ::uint32_t getNumberOfCols();
  inline void setNumberOfCols( ::uint32_t value);

  inline  ::uint32_t getCellsPerColumn();
  inline void setCellsPerColumn( ::uint32_t value);

  inline  ::int32_t getMaxSegmentsPerCell();
  inline void setMaxSegmentsPerCell( ::int32_t value);

  inline  ::uint32_t getActivationThreshold();
  inline void setActivationThreshold( ::uint32_t value);

  inline  ::uint32_t getMinThreshold();
  inline void setMinThreshold( ::uint32_t value);

  inline  ::uint32_t getSegUpdateValidDuration();
  inline void setSegUpdateValidDuration( ::uint32_t value);

  inline  ::uint32_t getNewSynapseCount();
  inline void setNewSynapseCount( ::uint32_t value);

  inline  ::int32_t getMaxSynapsesPerSegment();
  inline void setMaxSynapsesPerSegment( ::int32_t value);

  inline float getInitSegFreq();
  inline void setInitSegFreq(float value);

  inline float getInitialPerm();
  inline void setInitialPerm(float value);

  inline float getConnectedPerm();
  inline void setConnectedPerm(float value);

  inline float getPermanenceMax();
  inline void setPermanenceMax(float value);

  inline float getPermanenceDec();
  inline void setPermanenceDec(float value);

  inline float getPermanenceInc();
  inline void setPermanenceInc(float value);

  inline bool getCheckSynapseConsistency();
  inline void setCheckSynapseConsistency(bool value);

  inline bool getDoPooling();
  inline void setDoPooling(bool value);

  inline float getGlobalDecay();
  inline void setGlobalDecay(float value);

  inline  ::uint32_t getMaxAge();
  inline void setMaxAge( ::uint32_t value);

  inline  ::uint32_t getMaxInfBacktrack();
  inline void setMaxInfBacktrack( ::uint32_t value);

  inline  ::uint32_t getMaxLrnBacktrack();
  inline void setMaxLrnBacktrack( ::uint32_t value);

  inline  ::uint32_t getPamLength();
  inline void setPamLength( ::uint32_t value);

  inline  ::uint32_t getPamCounter();
  inline void setPamCounter( ::uint32_t value);

  inline  ::uint32_t getLearnedSeqLength();
  inline void setLearnedSeqLength( ::uint32_t value);

  inline float getAvgLearnedSeqLength();
  inline void setAvgLearnedSeqLength(float value);

  inline  ::uint32_t getMaxSeqLength();
  inline void setMaxSeqLength( ::uint32_t value);

  inline float getAvgInputDensity();
  inline void setAvgInputDensity(float value);

  inline bool hasOutputType();
  inline  ::capnp::Text::Builder getOutputType();
  inline void setOutputType( ::capnp::Text::Reader value);
  inline  ::capnp::Text::Builder initOutputType(unsigned int size);
  inline void adoptOutputType(::capnp::Orphan< ::capnp::Text>&& value);
  inline ::capnp::Orphan< ::capnp::Text> disownOutputType();

  inline  ::uint32_t getBurnIn();
  inline void setBurnIn( ::uint32_t value);

  inline bool getCollectStats();
  inline void setCollectStats(bool value);

  inline bool getCollectSequenceStats();
  inline void setCollectSequenceStats(bool value);

  inline  ::uint32_t getIterationIdx();
  inline void setIterationIdx( ::uint32_t value);

  inline  ::uint32_t getLrnIterationIdx();
  inline void setLrnIterationIdx( ::uint32_t value);

  inline bool getResetCalled();
  inline void setResetCalled(bool value);

  inline  ::uint32_t getNextSegIdx();
  inline void setNextSegIdx( ::uint32_t value);

  inline bool hasCells();
  inline  ::capnp::List< ::TemporalMemoryV1Proto::Cell,  ::capnp::Kind::STRUCT>::Builder getCells();
  inline void setCells( ::capnp::List< ::TemporalMemoryV1Proto::Cell,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::TemporalMemoryV1Proto::Cell,  ::capnp::Kind::STRUCT>::Builder initCells(unsigned int size);
  inline void adoptCells(::capnp::Orphan< ::capnp::List< ::TemporalMemoryV1Proto::Cell,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::TemporalMemoryV1Proto::Cell,  ::capnp::Kind::STRUCT>> disownCells();

  inline bool hasSegmentUpdates();
  inline  ::capnp::List< ::TemporalMemoryV1Proto::SegmentUpdate,  ::capnp::Kind::STRUCT>::Builder getSegmentUpdates();
  inline void setSegmentUpdates( ::capnp::List< ::TemporalMemoryV1Proto::SegmentUpdate,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::TemporalMemoryV1Proto::SegmentUpdate,  ::capnp::Kind::STRUCT>::Builder initSegmentUpdates(unsigned int size);
  inline void adoptSegmentUpdates(::capnp::Orphan< ::capnp::List< ::TemporalMemoryV1Proto::SegmentUpdate,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::TemporalMemoryV1Proto::SegmentUpdate,  ::capnp::Kind::STRUCT>> disownSegmentUpdates();

  inline bool getOwnsMemory();
  inline void setOwnsMemory(bool value);

  inline bool hasLrnActiveStateT1();
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder getLrnActiveStateT1();
  inline void setLrnActiveStateT1( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setLrnActiveStateT1(::kj::ArrayPtr<const  ::uint8_t> value);
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder initLrnActiveStateT1(unsigned int size);
  inline void adoptLrnActiveStateT1(::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> disownLrnActiveStateT1();

  inline bool hasLrnActiveStateT();
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder getLrnActiveStateT();
  inline void setLrnActiveStateT( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setLrnActiveStateT(::kj::ArrayPtr<const  ::uint8_t> value);
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder initLrnActiveStateT(unsigned int size);
  inline void adoptLrnActiveStateT(::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> disownLrnActiveStateT();

  inline bool hasLrnPredictedStateT1();
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder getLrnPredictedStateT1();
  inline void setLrnPredictedStateT1( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setLrnPredictedStateT1(::kj::ArrayPtr<const  ::uint8_t> value);
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder initLrnPredictedStateT1(unsigned int size);
  inline void adoptLrnPredictedStateT1(::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> disownLrnPredictedStateT1();

  inline bool hasLrnPredictedStateT();
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder getLrnPredictedStateT();
  inline void setLrnPredictedStateT( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setLrnPredictedStateT(::kj::ArrayPtr<const  ::uint8_t> value);
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder initLrnPredictedStateT(unsigned int size);
  inline void adoptLrnPredictedStateT(::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> disownLrnPredictedStateT();

  inline bool hasInfActiveStateT1();
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder getInfActiveStateT1();
  inline void setInfActiveStateT1( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setInfActiveStateT1(::kj::ArrayPtr<const  ::uint8_t> value);
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder initInfActiveStateT1(unsigned int size);
  inline void adoptInfActiveStateT1(::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> disownInfActiveStateT1();

  inline bool hasInfActiveStateT();
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder getInfActiveStateT();
  inline void setInfActiveStateT( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setInfActiveStateT(::kj::ArrayPtr<const  ::uint8_t> value);
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder initInfActiveStateT(unsigned int size);
  inline void adoptInfActiveStateT(::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> disownInfActiveStateT();

  inline bool hasInfActiveStateBackup();
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder getInfActiveStateBackup();
  inline void setInfActiveStateBackup( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setInfActiveStateBackup(::kj::ArrayPtr<const  ::uint8_t> value);
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder initInfActiveStateBackup(unsigned int size);
  inline void adoptInfActiveStateBackup(::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> disownInfActiveStateBackup();

  inline bool hasInfActiveStateCandidate();
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder getInfActiveStateCandidate();
  inline void setInfActiveStateCandidate( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setInfActiveStateCandidate(::kj::ArrayPtr<const  ::uint8_t> value);
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder initInfActiveStateCandidate(unsigned int size);
  inline void adoptInfActiveStateCandidate(::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> disownInfActiveStateCandidate();

  inline bool hasInfPredictedStateT1();
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder getInfPredictedStateT1();
  inline void setInfPredictedStateT1( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setInfPredictedStateT1(::kj::ArrayPtr<const  ::uint8_t> value);
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder initInfPredictedStateT1(unsigned int size);
  inline void adoptInfPredictedStateT1(::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> disownInfPredictedStateT1();

  inline bool hasInfPredictedStateT();
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder getInfPredictedStateT();
  inline void setInfPredictedStateT( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setInfPredictedStateT(::kj::ArrayPtr<const  ::uint8_t> value);
  inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder initInfPredictedStateT(unsigned int size);
  inline void adoptInfPredictedStateT(::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> disownInfPredictedStateT();

  inline bool hasCellConfidenceT1();
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder getCellConfidenceT1();
  inline void setCellConfidenceT1( ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setCellConfidenceT1(::kj::ArrayPtr<const float> value);
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder initCellConfidenceT1(unsigned int size);
  inline void adoptCellConfidenceT1(::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>> disownCellConfidenceT1();

  inline bool hasCellConfidenceT();
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder getCellConfidenceT();
  inline void setCellConfidenceT( ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setCellConfidenceT(::kj::ArrayPtr<const float> value);
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder initCellConfidenceT(unsigned int size);
  inline void adoptCellConfidenceT(::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>> disownCellConfidenceT();

  inline bool hasColConfidenceT1();
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder getColConfidenceT1();
  inline void setColConfidenceT1( ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setColConfidenceT1(::kj::ArrayPtr<const float> value);
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder initColConfidenceT1(unsigned int size);
  inline void adoptColConfidenceT1(::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>> disownColConfidenceT1();

  inline bool hasColConfidenceT();
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder getColConfidenceT();
  inline void setColConfidenceT( ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setColConfidenceT(::kj::ArrayPtr<const float> value);
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder initColConfidenceT(unsigned int size);
  inline void adoptColConfidenceT(::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>> disownColConfidenceT();

  inline bool hasPrevLrnPatterns();
  inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder getPrevLrnPatterns();
  inline void setPrevLrnPatterns( ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader value);
  inline void setPrevLrnPatterns(::kj::ArrayPtr<const  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader> value);
  inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder initPrevLrnPatterns(unsigned int size);
  inline void adoptPrevLrnPatterns(::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>> disownPrevLrnPatterns();

  inline bool hasPrevInfPatterns();
  inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder getPrevInfPatterns();
  inline void setPrevInfPatterns( ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader value);
  inline void setPrevInfPatterns(::kj::ArrayPtr<const  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader> value);
  inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder initPrevInfPatterns(unsigned int size);
  inline void adoptPrevInfPatterns(::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>> disownPrevInfPatterns();

  inline  ::uint32_t getStatsNumInfersSinceReset();
  inline void setStatsNumInfersSinceReset( ::uint32_t value);

  inline  ::uint32_t getStatsNumPredictions();
  inline void setStatsNumPredictions( ::uint32_t value);

  inline float getStatsCurPredictionScore2();
  inline void setStatsCurPredictionScore2(float value);

  inline float getStatsPredictionScoreTotal2();
  inline void setStatsPredictionScoreTotal2(float value);

  inline float getStatsCurFalseNegativeScore();
  inline void setStatsCurFalseNegativeScore(float value);

  inline float getStatsFalseNegativeScoreTotal();
  inline void setStatsFalseNegativeScoreTotal(float value);

  inline float getStatsCurFalsePositiveScore();
  inline void setStatsCurFalsePositiveScore(float value);

  inline float getStatsFalsePositiveScoreTotal();
  inline void setStatsFalsePositiveScoreTotal(float value);

  inline float getStatsPctExtraTotal();
  inline void setStatsPctExtraTotal(float value);

  inline float getStatsPctMissingTotal();
  inline void setStatsPctMissingTotal(float value);

  inline  ::uint32_t getStatsCurMissing();
  inline void setStatsCurMissing( ::uint32_t value);

  inline  ::uint32_t getStatsCurExtra();
  inline void setStatsCurExtra( ::uint32_t value);

  inline  ::uint32_t getStatsTotalMissing();
  inline void setStatsTotalMissing( ::uint32_t value);

  inline  ::uint32_t getStatsTotalExtra();
  inline void setStatsTotalExtra( ::uint32_t value);

  inline bool hasStatsPrevSequenceSignature();
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder getStatsPrevSequenceSignature();
  inline void setStatsPrevSequenceSignature( ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setStatsPrevSequenceSignature(::kj::ArrayPtr<const float> value);
  inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder initStatsPrevSequenceSignature(unsigned int size);
  inline void adoptStatsPrevSequenceSignature(::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>> disownStatsPrevSequenceSignature();

  inline bool hasStatsConfHistogram();
  inline  ::capnp::List< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder getStatsConfHistogram();
  inline void setStatsConfHistogram( ::capnp::List< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader value);
  inline void setStatsConfHistogram(::kj::ArrayPtr<const  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader> value);
  inline  ::capnp::List< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder initStatsConfHistogram(unsigned int size);
  inline void adoptStatsConfHistogram(::capnp::Orphan< ::capnp::List< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>> disownStatsConfHistogram();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class TemporalMemoryV1Proto::Pipeline {
public:
  typedef TemporalMemoryV1Proto Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::RandomProto::Pipeline getRandom();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class TemporalMemoryV1Proto::Cell::Reader {
public:
  typedef Cell Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasSegments() const;
  inline  ::capnp::List< ::TemporalMemoryV1Proto::Segment,  ::capnp::Kind::STRUCT>::Reader getSegments() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class TemporalMemoryV1Proto::Cell::Builder {
public:
  typedef Cell Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasSegments();
  inline  ::capnp::List< ::TemporalMemoryV1Proto::Segment,  ::capnp::Kind::STRUCT>::Builder getSegments();
  inline void setSegments( ::capnp::List< ::TemporalMemoryV1Proto::Segment,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::TemporalMemoryV1Proto::Segment,  ::capnp::Kind::STRUCT>::Builder initSegments(unsigned int size);
  inline void adoptSegments(::capnp::Orphan< ::capnp::List< ::TemporalMemoryV1Proto::Segment,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::TemporalMemoryV1Proto::Segment,  ::capnp::Kind::STRUCT>> disownSegments();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class TemporalMemoryV1Proto::Cell::Pipeline {
public:
  typedef Cell Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class TemporalMemoryV1Proto::Segment::Reader {
public:
  typedef Segment Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint32_t getSegIdx() const;

  inline bool getSequenceSegment() const;

  inline float getFrequency() const;

  inline  ::uint32_t getNumConnectedSynapses() const;

  inline  ::uint32_t getTotalActivations() const;

  inline  ::uint32_t getPositiveActivations() const;

  inline  ::uint32_t getLastActiveIteration() const;

  inline float getLastPosDutyCycle() const;

  inline  ::uint32_t getLastPosDutyCycleIteration() const;

  inline bool hasSynapses() const;
  inline  ::capnp::List< ::TemporalMemoryV1Proto::Synapse,  ::capnp::Kind::STRUCT>::Reader getSynapses() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class TemporalMemoryV1Proto::Segment::Builder {
public:
  typedef Segment Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint32_t getSegIdx();
  inline void setSegIdx( ::uint32_t value);

  inline bool getSequenceSegment();
  inline void setSequenceSegment(bool value);

  inline float getFrequency();
  inline void setFrequency(float value);

  inline  ::uint32_t getNumConnectedSynapses();
  inline void setNumConnectedSynapses( ::uint32_t value);

  inline  ::uint32_t getTotalActivations();
  inline void setTotalActivations( ::uint32_t value);

  inline  ::uint32_t getPositiveActivations();
  inline void setPositiveActivations( ::uint32_t value);

  inline  ::uint32_t getLastActiveIteration();
  inline void setLastActiveIteration( ::uint32_t value);

  inline float getLastPosDutyCycle();
  inline void setLastPosDutyCycle(float value);

  inline  ::uint32_t getLastPosDutyCycleIteration();
  inline void setLastPosDutyCycleIteration( ::uint32_t value);

  inline bool hasSynapses();
  inline  ::capnp::List< ::TemporalMemoryV1Proto::Synapse,  ::capnp::Kind::STRUCT>::Builder getSynapses();
  inline void setSynapses( ::capnp::List< ::TemporalMemoryV1Proto::Synapse,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::TemporalMemoryV1Proto::Synapse,  ::capnp::Kind::STRUCT>::Builder initSynapses(unsigned int size);
  inline void adoptSynapses(::capnp::Orphan< ::capnp::List< ::TemporalMemoryV1Proto::Synapse,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::TemporalMemoryV1Proto::Synapse,  ::capnp::Kind::STRUCT>> disownSynapses();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class TemporalMemoryV1Proto::Segment::Pipeline {
public:
  typedef Segment Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class TemporalMemoryV1Proto::Synapse::Reader {
public:
  typedef Synapse Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint64_t getSrcCellIdx() const;

  inline float getPermanence() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class TemporalMemoryV1Proto::Synapse::Builder {
public:
  typedef Synapse Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint64_t getSrcCellIdx();
  inline void setSrcCellIdx( ::uint64_t value);

  inline float getPermanence();
  inline void setPermanence(float value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class TemporalMemoryV1Proto::Synapse::Pipeline {
public:
  typedef Synapse Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class TemporalMemoryV1Proto::SegmentUpdate::Reader {
public:
  typedef SegmentUpdate Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint32_t getCellIdx() const;

  inline  ::uint32_t getSegIdx() const;

  inline bool getSequenceSegment() const;

  inline bool hasSynapses() const;
  inline  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader getSynapses() const;

  inline bool hasNewSynapses() const;
  inline  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader getNewSynapses() const;

  inline  ::uint32_t getLrnIterationIdx() const;

  inline bool getPhase1() const;

  inline bool getWeaklyPredicting() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class TemporalMemoryV1Proto::SegmentUpdate::Builder {
public:
  typedef SegmentUpdate Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint32_t getCellIdx();
  inline void setCellIdx( ::uint32_t value);

  inline  ::uint32_t getSegIdx();
  inline void setSegIdx( ::uint32_t value);

  inline bool getSequenceSegment();
  inline void setSequenceSegment(bool value);

  inline bool hasSynapses();
  inline  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Builder getSynapses();
  inline void setSynapses( ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setSynapses(::kj::ArrayPtr<const  ::uint32_t> value);
  inline  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Builder initSynapses(unsigned int size);
  inline void adoptSynapses(::capnp::Orphan< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>> disownSynapses();

  inline bool hasNewSynapses();
  inline  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Builder getNewSynapses();
  inline void setNewSynapses( ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setNewSynapses(::kj::ArrayPtr<const  ::uint32_t> value);
  inline  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Builder initNewSynapses(unsigned int size);
  inline void adoptNewSynapses(::capnp::Orphan< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>> disownNewSynapses();

  inline  ::uint32_t getLrnIterationIdx();
  inline void setLrnIterationIdx( ::uint32_t value);

  inline bool getPhase1();
  inline void setPhase1(bool value);

  inline bool getWeaklyPredicting();
  inline void setWeaklyPredicting(bool value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class TemporalMemoryV1Proto::SegmentUpdate::Pipeline {
public:
  typedef SegmentUpdate Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline  ::uint8_t TemporalMemoryV1Proto::Reader::getVerbosity() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t TemporalMemoryV1Proto::Builder::getVerbosity() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setVerbosity( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool TemporalMemoryV1Proto::Reader::hasRandom() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasRandom() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::RandomProto::Reader TemporalMemoryV1Proto::Reader::getRandom() const {
  return ::capnp::_::PointerHelpers< ::RandomProto>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::RandomProto::Builder TemporalMemoryV1Proto::Builder::getRandom() {
  return ::capnp::_::PointerHelpers< ::RandomProto>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::RandomProto::Pipeline TemporalMemoryV1Proto::Pipeline::getRandom() {
  return  ::RandomProto::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void TemporalMemoryV1Proto::Builder::setRandom( ::RandomProto::Reader value) {
  ::capnp::_::PointerHelpers< ::RandomProto>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::RandomProto::Builder TemporalMemoryV1Proto::Builder::initRandom() {
  return ::capnp::_::PointerHelpers< ::RandomProto>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::adoptRandom(
    ::capnp::Orphan< ::RandomProto>&& value) {
  ::capnp::_::PointerHelpers< ::RandomProto>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::RandomProto> TemporalMemoryV1Proto::Builder::disownRandom() {
  return ::capnp::_::PointerHelpers< ::RandomProto>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getNumberOfCols() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getNumberOfCols() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setNumberOfCols( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getCellsPerColumn() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getCellsPerColumn() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setCellsPerColumn( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t TemporalMemoryV1Proto::Reader::getMaxSegmentsPerCell() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::int32_t TemporalMemoryV1Proto::Builder::getMaxSegmentsPerCell() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setMaxSegmentsPerCell( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getActivationThreshold() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getActivationThreshold() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setActivationThreshold( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getMinThreshold() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getMinThreshold() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setMinThreshold( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getSegUpdateValidDuration() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getSegUpdateValidDuration() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setSegUpdateValidDuration( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getNewSynapseCount() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getNewSynapseCount() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setNewSynapseCount( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t TemporalMemoryV1Proto::Reader::getMaxSynapsesPerSegment() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::int32_t TemporalMemoryV1Proto::Builder::getMaxSynapsesPerSegment() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setMaxSynapsesPerSegment( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Reader::getInitSegFreq() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Builder::getInitSegFreq() {
  return _builder.getDataField<float>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setInitSegFreq(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Reader::getInitialPerm() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Builder::getInitialPerm() {
  return _builder.getDataField<float>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setInitialPerm(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Reader::getConnectedPerm() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Builder::getConnectedPerm() {
  return _builder.getDataField<float>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setConnectedPerm(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Reader::getPermanenceMax() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Builder::getPermanenceMax() {
  return _builder.getDataField<float>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setPermanenceMax(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Reader::getPermanenceDec() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Builder::getPermanenceDec() {
  return _builder.getDataField<float>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setPermanenceDec(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Reader::getPermanenceInc() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Builder::getPermanenceInc() {
  return _builder.getDataField<float>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setPermanenceInc(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS, value);
}

inline bool TemporalMemoryV1Proto::Reader::getCheckSynapseConsistency() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline bool TemporalMemoryV1Proto::Builder::getCheckSynapseConsistency() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setCheckSynapseConsistency(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline bool TemporalMemoryV1Proto::Reader::getDoPooling() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline bool TemporalMemoryV1Proto::Builder::getDoPooling() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setDoPooling(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Reader::getGlobalDecay() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Builder::getGlobalDecay() {
  return _builder.getDataField<float>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setGlobalDecay(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getMaxAge() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getMaxAge() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setMaxAge( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getMaxInfBacktrack() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getMaxInfBacktrack() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setMaxInfBacktrack( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getMaxLrnBacktrack() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getMaxLrnBacktrack() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setMaxLrnBacktrack( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getPamLength() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getPamLength() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setPamLength( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getPamCounter() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<20>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getPamCounter() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<20>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setPamCounter( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<20>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getLearnedSeqLength() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<21>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getLearnedSeqLength() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<21>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setLearnedSeqLength( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<21>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Reader::getAvgLearnedSeqLength() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Builder::getAvgLearnedSeqLength() {
  return _builder.getDataField<float>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setAvgLearnedSeqLength(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getMaxSeqLength() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getMaxSeqLength() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setMaxSeqLength( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Reader::getAvgInputDensity() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Builder::getAvgInputDensity() {
  return _builder.getDataField<float>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setAvgInputDensity(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS, value);
}

inline bool TemporalMemoryV1Proto::Reader::hasOutputType() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasOutputType() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::Text::Reader TemporalMemoryV1Proto::Reader::getOutputType() const {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::capnp::Text::Builder TemporalMemoryV1Proto::Builder::getOutputType() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setOutputType( ::capnp::Text::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::capnp::Text::Builder TemporalMemoryV1Proto::Builder::initOutputType(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptOutputType(
    ::capnp::Orphan< ::capnp::Text>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::Text> TemporalMemoryV1Proto::Builder::disownOutputType() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getBurnIn() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<25>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getBurnIn() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<25>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setBurnIn( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<25>() * ::capnp::ELEMENTS, value);
}

inline bool TemporalMemoryV1Proto::Reader::getCollectStats() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline bool TemporalMemoryV1Proto::Builder::getCollectStats() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setCollectStats(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline bool TemporalMemoryV1Proto::Reader::getCollectSequenceStats() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline bool TemporalMemoryV1Proto::Builder::getCollectSequenceStats() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setCollectSequenceStats(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getIterationIdx() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<26>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getIterationIdx() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<26>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setIterationIdx( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<26>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getLrnIterationIdx() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<27>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getLrnIterationIdx() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<27>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setLrnIterationIdx( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<27>() * ::capnp::ELEMENTS, value);
}

inline bool TemporalMemoryV1Proto::Reader::getResetCalled() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}

inline bool TemporalMemoryV1Proto::Builder::getResetCalled() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setResetCalled(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getNextSegIdx() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<28>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getNextSegIdx() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<28>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setNextSegIdx( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<28>() * ::capnp::ELEMENTS, value);
}

inline bool TemporalMemoryV1Proto::Reader::hasCells() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasCells() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::TemporalMemoryV1Proto::Cell,  ::capnp::Kind::STRUCT>::Reader TemporalMemoryV1Proto::Reader::getCells() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::Cell,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::TemporalMemoryV1Proto::Cell,  ::capnp::Kind::STRUCT>::Builder TemporalMemoryV1Proto::Builder::getCells() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::Cell,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setCells( ::capnp::List< ::TemporalMemoryV1Proto::Cell,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::Cell,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::TemporalMemoryV1Proto::Cell,  ::capnp::Kind::STRUCT>::Builder TemporalMemoryV1Proto::Builder::initCells(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::Cell,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptCells(
    ::capnp::Orphan< ::capnp::List< ::TemporalMemoryV1Proto::Cell,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::Cell,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::TemporalMemoryV1Proto::Cell,  ::capnp::Kind::STRUCT>> TemporalMemoryV1Proto::Builder::disownCells() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::Cell,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::Reader::hasSegmentUpdates() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasSegmentUpdates() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::TemporalMemoryV1Proto::SegmentUpdate,  ::capnp::Kind::STRUCT>::Reader TemporalMemoryV1Proto::Reader::getSegmentUpdates() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::SegmentUpdate,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::TemporalMemoryV1Proto::SegmentUpdate,  ::capnp::Kind::STRUCT>::Builder TemporalMemoryV1Proto::Builder::getSegmentUpdates() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::SegmentUpdate,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setSegmentUpdates( ::capnp::List< ::TemporalMemoryV1Proto::SegmentUpdate,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::SegmentUpdate,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::TemporalMemoryV1Proto::SegmentUpdate,  ::capnp::Kind::STRUCT>::Builder TemporalMemoryV1Proto::Builder::initSegmentUpdates(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::SegmentUpdate,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptSegmentUpdates(
    ::capnp::Orphan< ::capnp::List< ::TemporalMemoryV1Proto::SegmentUpdate,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::SegmentUpdate,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::TemporalMemoryV1Proto::SegmentUpdate,  ::capnp::Kind::STRUCT>> TemporalMemoryV1Proto::Builder::disownSegmentUpdates() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::SegmentUpdate,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::Reader::getOwnsMemory() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}

inline bool TemporalMemoryV1Proto::Builder::getOwnsMemory() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setOwnsMemory(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS, value);
}

inline bool TemporalMemoryV1Proto::Reader::hasLrnActiveStateT1() const {
  return !_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasLrnActiveStateT1() {
  return !_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader TemporalMemoryV1Proto::Reader::getLrnActiveStateT1() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::getLrnActiveStateT1() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setLrnActiveStateT1( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::Builder::setLrnActiveStateT1(::kj::ArrayPtr<const  ::uint8_t> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::initLrnActiveStateT1(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptLrnActiveStateT1(
    ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> TemporalMemoryV1Proto::Builder::disownLrnActiveStateT1() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::Reader::hasLrnActiveStateT() const {
  return !_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasLrnActiveStateT() {
  return !_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader TemporalMemoryV1Proto::Reader::getLrnActiveStateT() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::getLrnActiveStateT() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setLrnActiveStateT( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::Builder::setLrnActiveStateT(::kj::ArrayPtr<const  ::uint8_t> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::initLrnActiveStateT(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptLrnActiveStateT(
    ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> TemporalMemoryV1Proto::Builder::disownLrnActiveStateT() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::Reader::hasLrnPredictedStateT1() const {
  return !_reader.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasLrnPredictedStateT1() {
  return !_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader TemporalMemoryV1Proto::Reader::getLrnPredictedStateT1() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::getLrnPredictedStateT1() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setLrnPredictedStateT1( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::Builder::setLrnPredictedStateT1(::kj::ArrayPtr<const  ::uint8_t> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::initLrnPredictedStateT1(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptLrnPredictedStateT1(
    ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> TemporalMemoryV1Proto::Builder::disownLrnPredictedStateT1() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::Reader::hasLrnPredictedStateT() const {
  return !_reader.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasLrnPredictedStateT() {
  return !_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader TemporalMemoryV1Proto::Reader::getLrnPredictedStateT() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::getLrnPredictedStateT() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setLrnPredictedStateT( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::Builder::setLrnPredictedStateT(::kj::ArrayPtr<const  ::uint8_t> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::initLrnPredictedStateT(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptLrnPredictedStateT(
    ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> TemporalMemoryV1Proto::Builder::disownLrnPredictedStateT() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::Reader::hasInfActiveStateT1() const {
  return !_reader.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasInfActiveStateT1() {
  return !_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader TemporalMemoryV1Proto::Reader::getInfActiveStateT1() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::getInfActiveStateT1() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setInfActiveStateT1( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::Builder::setInfActiveStateT1(::kj::ArrayPtr<const  ::uint8_t> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::initInfActiveStateT1(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptInfActiveStateT1(
    ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> TemporalMemoryV1Proto::Builder::disownInfActiveStateT1() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::Reader::hasInfActiveStateT() const {
  return !_reader.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasInfActiveStateT() {
  return !_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader TemporalMemoryV1Proto::Reader::getInfActiveStateT() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::getInfActiveStateT() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setInfActiveStateT( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::Builder::setInfActiveStateT(::kj::ArrayPtr<const  ::uint8_t> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::initInfActiveStateT(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptInfActiveStateT(
    ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> TemporalMemoryV1Proto::Builder::disownInfActiveStateT() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::Reader::hasInfActiveStateBackup() const {
  return !_reader.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasInfActiveStateBackup() {
  return !_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader TemporalMemoryV1Proto::Reader::getInfActiveStateBackup() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::getInfActiveStateBackup() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setInfActiveStateBackup( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::Builder::setInfActiveStateBackup(::kj::ArrayPtr<const  ::uint8_t> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::initInfActiveStateBackup(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptInfActiveStateBackup(
    ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> TemporalMemoryV1Proto::Builder::disownInfActiveStateBackup() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::Reader::hasInfActiveStateCandidate() const {
  return !_reader.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasInfActiveStateCandidate() {
  return !_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader TemporalMemoryV1Proto::Reader::getInfActiveStateCandidate() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::getInfActiveStateCandidate() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setInfActiveStateCandidate( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::Builder::setInfActiveStateCandidate(::kj::ArrayPtr<const  ::uint8_t> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::initInfActiveStateCandidate(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptInfActiveStateCandidate(
    ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> TemporalMemoryV1Proto::Builder::disownInfActiveStateCandidate() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::Reader::hasInfPredictedStateT1() const {
  return !_reader.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasInfPredictedStateT1() {
  return !_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader TemporalMemoryV1Proto::Reader::getInfPredictedStateT1() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::getInfPredictedStateT1() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setInfPredictedStateT1( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::Builder::setInfPredictedStateT1(::kj::ArrayPtr<const  ::uint8_t> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::initInfPredictedStateT1(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptInfPredictedStateT1(
    ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> TemporalMemoryV1Proto::Builder::disownInfPredictedStateT1() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::Reader::hasInfPredictedStateT() const {
  return !_reader.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasInfPredictedStateT() {
  return !_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader TemporalMemoryV1Proto::Reader::getInfPredictedStateT() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::getInfPredictedStateT() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setInfPredictedStateT( ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::Builder::setInfPredictedStateT(::kj::ArrayPtr<const  ::uint8_t> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::initInfPredictedStateT(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptInfPredictedStateT(
    ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>> TemporalMemoryV1Proto::Builder::disownInfPredictedStateT() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint8_t,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::Reader::hasCellConfidenceT1() const {
  return !_reader.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasCellConfidenceT1() {
  return !_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader TemporalMemoryV1Proto::Reader::getCellConfidenceT1() const {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS));
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::getCellConfidenceT1() {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setCellConfidenceT1( ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::Builder::setCellConfidenceT1(::kj::ArrayPtr<const float> value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::initCellConfidenceT1(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptCellConfidenceT1(
    ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>> TemporalMemoryV1Proto::Builder::disownCellConfidenceT1() {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::Reader::hasCellConfidenceT() const {
  return !_reader.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasCellConfidenceT() {
  return !_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader TemporalMemoryV1Proto::Reader::getCellConfidenceT() const {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS));
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::getCellConfidenceT() {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setCellConfidenceT( ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::Builder::setCellConfidenceT(::kj::ArrayPtr<const float> value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::initCellConfidenceT(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptCellConfidenceT(
    ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>> TemporalMemoryV1Proto::Builder::disownCellConfidenceT() {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::Reader::hasColConfidenceT1() const {
  return !_reader.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasColConfidenceT1() {
  return !_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader TemporalMemoryV1Proto::Reader::getColConfidenceT1() const {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS));
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::getColConfidenceT1() {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setColConfidenceT1( ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::Builder::setColConfidenceT1(::kj::ArrayPtr<const float> value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::initColConfidenceT1(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptColConfidenceT1(
    ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>> TemporalMemoryV1Proto::Builder::disownColConfidenceT1() {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::Reader::hasColConfidenceT() const {
  return !_reader.getPointerField(
      ::capnp::bounded<17>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasColConfidenceT() {
  return !_builder.getPointerField(
      ::capnp::bounded<17>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader TemporalMemoryV1Proto::Reader::getColConfidenceT() const {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<17>() * ::capnp::POINTERS));
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::getColConfidenceT() {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<17>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setColConfidenceT( ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<17>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::Builder::setColConfidenceT(::kj::ArrayPtr<const float> value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<17>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::initColConfidenceT(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<17>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptColConfidenceT(
    ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<17>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>> TemporalMemoryV1Proto::Builder::disownColConfidenceT() {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<17>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::Reader::hasPrevLrnPatterns() const {
  return !_reader.getPointerField(
      ::capnp::bounded<18>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasPrevLrnPatterns() {
  return !_builder.getPointerField(
      ::capnp::bounded<18>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader TemporalMemoryV1Proto::Reader::getPrevLrnPatterns() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::get(_reader.getPointerField(
      ::capnp::bounded<18>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder TemporalMemoryV1Proto::Builder::getPrevLrnPatterns() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::get(_builder.getPointerField(
      ::capnp::bounded<18>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setPrevLrnPatterns( ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::set(_builder.getPointerField(
      ::capnp::bounded<18>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::Builder::setPrevLrnPatterns(::kj::ArrayPtr<const  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::set(_builder.getPointerField(
      ::capnp::bounded<18>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder TemporalMemoryV1Proto::Builder::initPrevLrnPatterns(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::init(_builder.getPointerField(
      ::capnp::bounded<18>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptPrevLrnPatterns(
    ::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::adopt(_builder.getPointerField(
      ::capnp::bounded<18>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>> TemporalMemoryV1Proto::Builder::disownPrevLrnPatterns() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::disown(_builder.getPointerField(
      ::capnp::bounded<18>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::Reader::hasPrevInfPatterns() const {
  return !_reader.getPointerField(
      ::capnp::bounded<19>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasPrevInfPatterns() {
  return !_builder.getPointerField(
      ::capnp::bounded<19>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader TemporalMemoryV1Proto::Reader::getPrevInfPatterns() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::get(_reader.getPointerField(
      ::capnp::bounded<19>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder TemporalMemoryV1Proto::Builder::getPrevInfPatterns() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::get(_builder.getPointerField(
      ::capnp::bounded<19>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setPrevInfPatterns( ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::set(_builder.getPointerField(
      ::capnp::bounded<19>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::Builder::setPrevInfPatterns(::kj::ArrayPtr<const  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::set(_builder.getPointerField(
      ::capnp::bounded<19>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder TemporalMemoryV1Proto::Builder::initPrevInfPatterns(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::init(_builder.getPointerField(
      ::capnp::bounded<19>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptPrevInfPatterns(
    ::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::adopt(_builder.getPointerField(
      ::capnp::bounded<19>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>> TemporalMemoryV1Proto::Builder::disownPrevInfPatterns() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::disown(_builder.getPointerField(
      ::capnp::bounded<19>() * ::capnp::POINTERS));
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getStatsNumInfersSinceReset() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<29>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getStatsNumInfersSinceReset() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<29>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setStatsNumInfersSinceReset( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<29>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getStatsNumPredictions() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<30>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getStatsNumPredictions() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<30>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setStatsNumPredictions( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<30>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Reader::getStatsCurPredictionScore2() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<31>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Builder::getStatsCurPredictionScore2() {
  return _builder.getDataField<float>(
      ::capnp::bounded<31>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setStatsCurPredictionScore2(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<31>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Reader::getStatsPredictionScoreTotal2() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<32>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Builder::getStatsPredictionScoreTotal2() {
  return _builder.getDataField<float>(
      ::capnp::bounded<32>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setStatsPredictionScoreTotal2(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<32>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Reader::getStatsCurFalseNegativeScore() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<33>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Builder::getStatsCurFalseNegativeScore() {
  return _builder.getDataField<float>(
      ::capnp::bounded<33>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setStatsCurFalseNegativeScore(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<33>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Reader::getStatsFalseNegativeScoreTotal() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<34>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Builder::getStatsFalseNegativeScoreTotal() {
  return _builder.getDataField<float>(
      ::capnp::bounded<34>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setStatsFalseNegativeScoreTotal(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<34>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Reader::getStatsCurFalsePositiveScore() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<35>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Builder::getStatsCurFalsePositiveScore() {
  return _builder.getDataField<float>(
      ::capnp::bounded<35>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setStatsCurFalsePositiveScore(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<35>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Reader::getStatsFalsePositiveScoreTotal() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<36>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Builder::getStatsFalsePositiveScoreTotal() {
  return _builder.getDataField<float>(
      ::capnp::bounded<36>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setStatsFalsePositiveScoreTotal(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<36>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Reader::getStatsPctExtraTotal() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<37>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Builder::getStatsPctExtraTotal() {
  return _builder.getDataField<float>(
      ::capnp::bounded<37>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setStatsPctExtraTotal(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<37>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Reader::getStatsPctMissingTotal() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<38>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Builder::getStatsPctMissingTotal() {
  return _builder.getDataField<float>(
      ::capnp::bounded<38>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setStatsPctMissingTotal(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<38>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getStatsCurMissing() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<39>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getStatsCurMissing() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<39>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setStatsCurMissing( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<39>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getStatsCurExtra() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<40>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getStatsCurExtra() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<40>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setStatsCurExtra( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<40>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getStatsTotalMissing() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<41>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getStatsTotalMissing() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<41>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setStatsTotalMissing( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<41>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Reader::getStatsTotalExtra() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<42>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Builder::getStatsTotalExtra() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<42>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Builder::setStatsTotalExtra( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<42>() * ::capnp::ELEMENTS, value);
}

inline bool TemporalMemoryV1Proto::Reader::hasStatsPrevSequenceSignature() const {
  return !_reader.getPointerField(
      ::capnp::bounded<20>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasStatsPrevSequenceSignature() {
  return !_builder.getPointerField(
      ::capnp::bounded<20>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader TemporalMemoryV1Proto::Reader::getStatsPrevSequenceSignature() const {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<20>() * ::capnp::POINTERS));
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::getStatsPrevSequenceSignature() {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<20>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setStatsPrevSequenceSignature( ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<20>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::Builder::setStatsPrevSequenceSignature(::kj::ArrayPtr<const float> value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<20>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::Builder::initStatsPrevSequenceSignature(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<20>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptStatsPrevSequenceSignature(
    ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<20>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>> TemporalMemoryV1Proto::Builder::disownStatsPrevSequenceSignature() {
  return ::capnp::_::PointerHelpers< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<20>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::Reader::hasStatsConfHistogram() const {
  return !_reader.getPointerField(
      ::capnp::bounded<21>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Builder::hasStatsConfHistogram() {
  return !_builder.getPointerField(
      ::capnp::bounded<21>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader TemporalMemoryV1Proto::Reader::getStatsConfHistogram() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::get(_reader.getPointerField(
      ::capnp::bounded<21>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder TemporalMemoryV1Proto::Builder::getStatsConfHistogram() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::get(_builder.getPointerField(
      ::capnp::bounded<21>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Builder::setStatsConfHistogram( ::capnp::List< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::set(_builder.getPointerField(
      ::capnp::bounded<21>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::Builder::setStatsConfHistogram(::kj::ArrayPtr<const  ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>::Reader> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::set(_builder.getPointerField(
      ::capnp::bounded<21>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder TemporalMemoryV1Proto::Builder::initStatsConfHistogram(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::init(_builder.getPointerField(
      ::capnp::bounded<21>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Builder::adoptStatsConfHistogram(
    ::capnp::Orphan< ::capnp::List< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::adopt(_builder.getPointerField(
      ::capnp::bounded<21>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>> TemporalMemoryV1Proto::Builder::disownStatsConfHistogram() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List<float,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::disown(_builder.getPointerField(
      ::capnp::bounded<21>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::Cell::Reader::hasSegments() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Cell::Builder::hasSegments() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::TemporalMemoryV1Proto::Segment,  ::capnp::Kind::STRUCT>::Reader TemporalMemoryV1Proto::Cell::Reader::getSegments() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::Segment,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::TemporalMemoryV1Proto::Segment,  ::capnp::Kind::STRUCT>::Builder TemporalMemoryV1Proto::Cell::Builder::getSegments() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::Segment,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Cell::Builder::setSegments( ::capnp::List< ::TemporalMemoryV1Proto::Segment,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::Segment,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::TemporalMemoryV1Proto::Segment,  ::capnp::Kind::STRUCT>::Builder TemporalMemoryV1Proto::Cell::Builder::initSegments(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::Segment,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Cell::Builder::adoptSegments(
    ::capnp::Orphan< ::capnp::List< ::TemporalMemoryV1Proto::Segment,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::Segment,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::TemporalMemoryV1Proto::Segment,  ::capnp::Kind::STRUCT>> TemporalMemoryV1Proto::Cell::Builder::disownSegments() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::Segment,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline  ::uint32_t TemporalMemoryV1Proto::Segment::Reader::getSegIdx() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Segment::Builder::getSegIdx() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Segment::Builder::setSegIdx( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool TemporalMemoryV1Proto::Segment::Reader::getSequenceSegment() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<32>() * ::capnp::ELEMENTS);
}

inline bool TemporalMemoryV1Proto::Segment::Builder::getSequenceSegment() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<32>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Segment::Builder::setSequenceSegment(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<32>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Segment::Reader::getFrequency() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Segment::Builder::getFrequency() {
  return _builder.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Segment::Builder::setFrequency(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Segment::Reader::getNumConnectedSynapses() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Segment::Builder::getNumConnectedSynapses() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Segment::Builder::setNumConnectedSynapses( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Segment::Reader::getTotalActivations() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Segment::Builder::getTotalActivations() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Segment::Builder::setTotalActivations( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Segment::Reader::getPositiveActivations() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Segment::Builder::getPositiveActivations() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Segment::Builder::setPositiveActivations( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Segment::Reader::getLastActiveIteration() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Segment::Builder::getLastActiveIteration() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Segment::Builder::setLastActiveIteration( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Segment::Reader::getLastPosDutyCycle() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Segment::Builder::getLastPosDutyCycle() {
  return _builder.getDataField<float>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Segment::Builder::setLastPosDutyCycle(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::Segment::Reader::getLastPosDutyCycleIteration() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::Segment::Builder::getLastPosDutyCycleIteration() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Segment::Builder::setLastPosDutyCycleIteration( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline bool TemporalMemoryV1Proto::Segment::Reader::hasSynapses() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::Segment::Builder::hasSynapses() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::TemporalMemoryV1Proto::Synapse,  ::capnp::Kind::STRUCT>::Reader TemporalMemoryV1Proto::Segment::Reader::getSynapses() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::Synapse,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::TemporalMemoryV1Proto::Synapse,  ::capnp::Kind::STRUCT>::Builder TemporalMemoryV1Proto::Segment::Builder::getSynapses() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::Synapse,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::Segment::Builder::setSynapses( ::capnp::List< ::TemporalMemoryV1Proto::Synapse,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::Synapse,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::TemporalMemoryV1Proto::Synapse,  ::capnp::Kind::STRUCT>::Builder TemporalMemoryV1Proto::Segment::Builder::initSynapses(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::Synapse,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::Segment::Builder::adoptSynapses(
    ::capnp::Orphan< ::capnp::List< ::TemporalMemoryV1Proto::Synapse,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::Synapse,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::TemporalMemoryV1Proto::Synapse,  ::capnp::Kind::STRUCT>> TemporalMemoryV1Proto::Segment::Builder::disownSynapses() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::TemporalMemoryV1Proto::Synapse,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline  ::uint64_t TemporalMemoryV1Proto::Synapse::Reader::getSrcCellIdx() const {
  return _reader.getDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint64_t TemporalMemoryV1Proto::Synapse::Builder::getSrcCellIdx() {
  return _builder.getDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Synapse::Builder::setSrcCellIdx( ::uint64_t value) {
  _builder.setDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline float TemporalMemoryV1Proto::Synapse::Reader::getPermanence() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline float TemporalMemoryV1Proto::Synapse::Builder::getPermanence() {
  return _builder.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::Synapse::Builder::setPermanence(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::SegmentUpdate::Reader::getCellIdx() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::SegmentUpdate::Builder::getCellIdx() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::SegmentUpdate::Builder::setCellIdx( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t TemporalMemoryV1Proto::SegmentUpdate::Reader::getSegIdx() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::SegmentUpdate::Builder::getSegIdx() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::SegmentUpdate::Builder::setSegIdx( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline bool TemporalMemoryV1Proto::SegmentUpdate::Reader::getSequenceSegment() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<64>() * ::capnp::ELEMENTS);
}

inline bool TemporalMemoryV1Proto::SegmentUpdate::Builder::getSequenceSegment() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<64>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::SegmentUpdate::Builder::setSequenceSegment(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<64>() * ::capnp::ELEMENTS, value);
}

inline bool TemporalMemoryV1Proto::SegmentUpdate::Reader::hasSynapses() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::SegmentUpdate::Builder::hasSynapses() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader TemporalMemoryV1Proto::SegmentUpdate::Reader::getSynapses() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::SegmentUpdate::Builder::getSynapses() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::SegmentUpdate::Builder::setSynapses( ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::SegmentUpdate::Builder::setSynapses(::kj::ArrayPtr<const  ::uint32_t> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::SegmentUpdate::Builder::initSynapses(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::SegmentUpdate::Builder::adoptSynapses(
    ::capnp::Orphan< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>> TemporalMemoryV1Proto::SegmentUpdate::Builder::disownSynapses() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool TemporalMemoryV1Proto::SegmentUpdate::Reader::hasNewSynapses() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool TemporalMemoryV1Proto::SegmentUpdate::Builder::hasNewSynapses() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader TemporalMemoryV1Proto::SegmentUpdate::Reader::getNewSynapses() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::SegmentUpdate::Builder::getNewSynapses() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void TemporalMemoryV1Proto::SegmentUpdate::Builder::setNewSynapses( ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline void TemporalMemoryV1Proto::SegmentUpdate::Builder::setNewSynapses(::kj::ArrayPtr<const  ::uint32_t> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Builder TemporalMemoryV1Proto::SegmentUpdate::Builder::initNewSynapses(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), size);
}
inline void TemporalMemoryV1Proto::SegmentUpdate::Builder::adoptNewSynapses(
    ::capnp::Orphan< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>> TemporalMemoryV1Proto::SegmentUpdate::Builder::disownNewSynapses() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline  ::uint32_t TemporalMemoryV1Proto::SegmentUpdate::Reader::getLrnIterationIdx() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t TemporalMemoryV1Proto::SegmentUpdate::Builder::getLrnIterationIdx() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::SegmentUpdate::Builder::setLrnIterationIdx( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline bool TemporalMemoryV1Proto::SegmentUpdate::Reader::getPhase1() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<65>() * ::capnp::ELEMENTS);
}

inline bool TemporalMemoryV1Proto::SegmentUpdate::Builder::getPhase1() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<65>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::SegmentUpdate::Builder::setPhase1(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<65>() * ::capnp::ELEMENTS, value);
}

inline bool TemporalMemoryV1Proto::SegmentUpdate::Reader::getWeaklyPredicting() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<66>() * ::capnp::ELEMENTS);
}

inline bool TemporalMemoryV1Proto::SegmentUpdate::Builder::getWeaklyPredicting() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<66>() * ::capnp::ELEMENTS);
}
inline void TemporalMemoryV1Proto::SegmentUpdate::Builder::setWeaklyPredicting(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<66>() * ::capnp::ELEMENTS, value);
}


