// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: SparseMatrixProto.capnp

#include "SparseMatrixProto.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<72> b_a4b74c4b58a02439 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     57,  36, 160,  88,  75,  76, 183, 164,
     40,   0,   0,   0,   1,   0,   1,   0,
     78, 106, 204, 151, 165,  38, 252, 238,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 110, 117, 112, 105,
     99,  47, 112, 114, 111, 116, 111,  47,
     83, 112,  97, 114, 115, 101,  77,  97,
    116, 114, 105, 120,  80, 114, 111, 116,
    111,  46,  99,  97, 112, 110, 112,  58,
     83, 112,  97, 114, 115, 101,  77,  97,
    116, 114, 105, 120,  80, 114, 111, 116,
    111,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
    110, 117, 109,  82, 111, 119, 115,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 117, 109,  67, 111, 108, 117, 109,
    110, 115,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 119, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    184, 234, 215, 161, 195,  20,  94, 199,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a4b74c4b58a02439 = b_a4b74c4b58a02439.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a4b74c4b58a02439[] = {
  &s_c75e14c3a1d7eab8,
};
static const uint16_t m_a4b74c4b58a02439[] = {1, 0, 2};
static const uint16_t i_a4b74c4b58a02439[] = {0, 1, 2};
const ::capnp::_::RawSchema s_a4b74c4b58a02439 = {
  0xa4b74c4b58a02439, b_a4b74c4b58a02439.words, 72, d_a4b74c4b58a02439, m_a4b74c4b58a02439,
  1, 3, i_a4b74c4b58a02439, nullptr, nullptr, { &s_a4b74c4b58a02439, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<40> b_c75e14c3a1d7eab8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    184, 234, 215, 161, 195,  20,  94, 199,
     40,   0,   0,   0,   1,   0,   0,   0,
     78, 106, 204, 151, 165,  38, 252, 238,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 110, 117, 112, 105,
     99,  47, 112, 114, 111, 116, 111,  47,
     83, 112,  97, 114, 115, 101,  77,  97,
    116, 114, 105, 120,  80, 114, 111, 116,
    111,  46,  99,  97, 112, 110, 112,  58,
     83, 112,  97, 114, 115, 101,  70, 108,
    111,  97, 116,  76, 105, 115, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    118,  97, 108, 117, 101, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    126,  57,   7,  49, 220,  48, 190, 176,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c75e14c3a1d7eab8 = b_c75e14c3a1d7eab8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c75e14c3a1d7eab8[] = {
  &s_b0be30dc3107397e,
};
static const uint16_t m_c75e14c3a1d7eab8[] = {0};
static const uint16_t i_c75e14c3a1d7eab8[] = {0};
const ::capnp::_::RawSchema s_c75e14c3a1d7eab8 = {
  0xc75e14c3a1d7eab8, b_c75e14c3a1d7eab8.words, 40, d_c75e14c3a1d7eab8, m_c75e14c3a1d7eab8,
  1, 1, i_c75e14c3a1d7eab8, nullptr, nullptr, { &s_c75e14c3a1d7eab8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_b0be30dc3107397e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    126,  57,   7,  49, 220,  48, 190, 176,
     40,   0,   0,   0,   1,   0,   1,   0,
     78, 106, 204, 151, 165,  38, 252, 238,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 110, 117, 112, 105,
     99,  47, 112, 114, 111, 116, 111,  47,
     83, 112,  97, 114, 115, 101,  77,  97,
    116, 114, 105, 120,  80, 114, 111, 116,
    111,  46,  99,  97, 112, 110, 112,  58,
     83, 112,  97, 114, 115, 101,  70, 108,
    111,  97, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 100, 101, 120,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b0be30dc3107397e = b_b0be30dc3107397e.words;
#if !CAPNP_LITE
static const uint16_t m_b0be30dc3107397e[] = {0, 1};
static const uint16_t i_b0be30dc3107397e[] = {0, 1};
const ::capnp::_::RawSchema s_b0be30dc3107397e = {
  0xb0be30dc3107397e, b_b0be30dc3107397e.words, 51, nullptr, m_b0be30dc3107397e,
  0, 2, i_b0be30dc3107397e, nullptr, nullptr, { &s_b0be30dc3107397e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// SparseMatrixProto
constexpr uint16_t SparseMatrixProto::_capnpPrivate::dataWordSize;
constexpr uint16_t SparseMatrixProto::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SparseMatrixProto::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SparseMatrixProto::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SparseFloatList
constexpr uint16_t SparseFloatList::_capnpPrivate::dataWordSize;
constexpr uint16_t SparseFloatList::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SparseFloatList::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SparseFloatList::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SparseFloat
constexpr uint16_t SparseFloat::_capnpPrivate::dataWordSize;
constexpr uint16_t SparseFloat::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SparseFloat::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SparseFloat::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



