// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: SdrClassifier.capnp

#pragma once

#include <capnp/generated-header-support.h>
#include <kj/windows-sanity.h>

#if CAPNP_VERSION != 7000
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif


namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(9b93dab9a9102ebe);
CAPNP_DECLARE_SCHEMA(870acd8214965aff);

}  // namespace schemas
}  // namespace capnp


struct SdrClassifierProto {
  SdrClassifierProto() = delete;

  class Reader;
  class Builder;
  class Pipeline;
  struct StepWeightMatrix;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(9b93dab9a9102ebe, 4, 6)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct SdrClassifierProto::StepWeightMatrix {
  StepWeightMatrix() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(870acd8214965aff, 1, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class SdrClassifierProto::Reader {
public:
  typedef SdrClassifierProto Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasSteps() const;
  inline  ::capnp::List< ::uint16_t,  ::capnp::Kind::PRIMITIVE>::Reader getSteps() const;

  inline double getAlpha() const;

  inline double getActValueAlpha() const;

  inline  ::uint32_t getMaxSteps() const;

  inline bool hasPatternNZHistory() const;
  inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader getPatternNZHistory() const;

  inline bool hasRecordNumHistory() const;
  inline  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader getRecordNumHistory() const;

  inline bool hasWeightMatrix() const;
  inline  ::capnp::List< ::SdrClassifierProto::StepWeightMatrix,  ::capnp::Kind::STRUCT>::Reader getWeightMatrix() const;

  inline  ::uint32_t getMaxBucketIdx() const;

  inline  ::uint32_t getMaxInputIdx() const;

  inline bool hasActualValues() const;
  inline  ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>::Reader getActualValues() const;

  inline bool hasActualValuesSet() const;
  inline  ::capnp::List<bool,  ::capnp::Kind::PRIMITIVE>::Reader getActualValuesSet() const;

  inline  ::uint16_t getVersion() const;

  inline  ::uint8_t getVerbosity() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class SdrClassifierProto::Builder {
public:
  typedef SdrClassifierProto Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasSteps();
  inline  ::capnp::List< ::uint16_t,  ::capnp::Kind::PRIMITIVE>::Builder getSteps();
  inline void setSteps( ::capnp::List< ::uint16_t,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setSteps(::kj::ArrayPtr<const  ::uint16_t> value);
  inline  ::capnp::List< ::uint16_t,  ::capnp::Kind::PRIMITIVE>::Builder initSteps(unsigned int size);
  inline void adoptSteps(::capnp::Orphan< ::capnp::List< ::uint16_t,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::uint16_t,  ::capnp::Kind::PRIMITIVE>> disownSteps();

  inline double getAlpha();
  inline void setAlpha(double value);

  inline double getActValueAlpha();
  inline void setActValueAlpha(double value);

  inline  ::uint32_t getMaxSteps();
  inline void setMaxSteps( ::uint32_t value);

  inline bool hasPatternNZHistory();
  inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder getPatternNZHistory();
  inline void setPatternNZHistory( ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader value);
  inline void setPatternNZHistory(::kj::ArrayPtr<const  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader> value);
  inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder initPatternNZHistory(unsigned int size);
  inline void adoptPatternNZHistory(::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>> disownPatternNZHistory();

  inline bool hasRecordNumHistory();
  inline  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Builder getRecordNumHistory();
  inline void setRecordNumHistory( ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setRecordNumHistory(::kj::ArrayPtr<const  ::uint32_t> value);
  inline  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Builder initRecordNumHistory(unsigned int size);
  inline void adoptRecordNumHistory(::capnp::Orphan< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>> disownRecordNumHistory();

  inline bool hasWeightMatrix();
  inline  ::capnp::List< ::SdrClassifierProto::StepWeightMatrix,  ::capnp::Kind::STRUCT>::Builder getWeightMatrix();
  inline void setWeightMatrix( ::capnp::List< ::SdrClassifierProto::StepWeightMatrix,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::SdrClassifierProto::StepWeightMatrix,  ::capnp::Kind::STRUCT>::Builder initWeightMatrix(unsigned int size);
  inline void adoptWeightMatrix(::capnp::Orphan< ::capnp::List< ::SdrClassifierProto::StepWeightMatrix,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::SdrClassifierProto::StepWeightMatrix,  ::capnp::Kind::STRUCT>> disownWeightMatrix();

  inline  ::uint32_t getMaxBucketIdx();
  inline void setMaxBucketIdx( ::uint32_t value);

  inline  ::uint32_t getMaxInputIdx();
  inline void setMaxInputIdx( ::uint32_t value);

  inline bool hasActualValues();
  inline  ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>::Builder getActualValues();
  inline void setActualValues( ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setActualValues(::kj::ArrayPtr<const double> value);
  inline  ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>::Builder initActualValues(unsigned int size);
  inline void adoptActualValues(::capnp::Orphan< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>> disownActualValues();

  inline bool hasActualValuesSet();
  inline  ::capnp::List<bool,  ::capnp::Kind::PRIMITIVE>::Builder getActualValuesSet();
  inline void setActualValuesSet( ::capnp::List<bool,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setActualValuesSet(::kj::ArrayPtr<const bool> value);
  inline  ::capnp::List<bool,  ::capnp::Kind::PRIMITIVE>::Builder initActualValuesSet(unsigned int size);
  inline void adoptActualValuesSet(::capnp::Orphan< ::capnp::List<bool,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List<bool,  ::capnp::Kind::PRIMITIVE>> disownActualValuesSet();

  inline  ::uint16_t getVersion();
  inline void setVersion( ::uint16_t value);

  inline  ::uint8_t getVerbosity();
  inline void setVerbosity( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class SdrClassifierProto::Pipeline {
public:
  typedef SdrClassifierProto Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class SdrClassifierProto::StepWeightMatrix::Reader {
public:
  typedef StepWeightMatrix Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint32_t getSteps() const;

  inline bool hasWeight() const;
  inline  ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>::Reader getWeight() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class SdrClassifierProto::StepWeightMatrix::Builder {
public:
  typedef StepWeightMatrix Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint32_t getSteps();
  inline void setSteps( ::uint32_t value);

  inline bool hasWeight();
  inline  ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>::Builder getWeight();
  inline void setWeight( ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setWeight(::kj::ArrayPtr<const double> value);
  inline  ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>::Builder initWeight(unsigned int size);
  inline void adoptWeight(::capnp::Orphan< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>> disownWeight();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class SdrClassifierProto::StepWeightMatrix::Pipeline {
public:
  typedef StepWeightMatrix Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline bool SdrClassifierProto::Reader::hasSteps() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool SdrClassifierProto::Builder::hasSteps() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::uint16_t,  ::capnp::Kind::PRIMITIVE>::Reader SdrClassifierProto::Reader::getSteps() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint16_t,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::uint16_t,  ::capnp::Kind::PRIMITIVE>::Builder SdrClassifierProto::Builder::getSteps() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint16_t,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void SdrClassifierProto::Builder::setSteps( ::capnp::List< ::uint16_t,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint16_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline void SdrClassifierProto::Builder::setSteps(::kj::ArrayPtr<const  ::uint16_t> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint16_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::uint16_t,  ::capnp::Kind::PRIMITIVE>::Builder SdrClassifierProto::Builder::initSteps(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint16_t,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), size);
}
inline void SdrClassifierProto::Builder::adoptSteps(
    ::capnp::Orphan< ::capnp::List< ::uint16_t,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint16_t,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::uint16_t,  ::capnp::Kind::PRIMITIVE>> SdrClassifierProto::Builder::disownSteps() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint16_t,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline double SdrClassifierProto::Reader::getAlpha() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline double SdrClassifierProto::Builder::getAlpha() {
  return _builder.getDataField<double>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void SdrClassifierProto::Builder::setAlpha(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline double SdrClassifierProto::Reader::getActValueAlpha() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline double SdrClassifierProto::Builder::getActValueAlpha() {
  return _builder.getDataField<double>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void SdrClassifierProto::Builder::setActValueAlpha(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t SdrClassifierProto::Reader::getMaxSteps() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t SdrClassifierProto::Builder::getMaxSteps() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void SdrClassifierProto::Builder::setMaxSteps( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline bool SdrClassifierProto::Reader::hasPatternNZHistory() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool SdrClassifierProto::Builder::hasPatternNZHistory() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader SdrClassifierProto::Reader::getPatternNZHistory() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder SdrClassifierProto::Builder::getPatternNZHistory() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void SdrClassifierProto::Builder::setPatternNZHistory( ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline void SdrClassifierProto::Builder::setPatternNZHistory(::kj::ArrayPtr<const  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>::Builder SdrClassifierProto::Builder::initPatternNZHistory(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), size);
}
inline void SdrClassifierProto::Builder::adoptPatternNZHistory(
    ::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>> SdrClassifierProto::Builder::disownPatternNZHistory() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>,  ::capnp::Kind::LIST>>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool SdrClassifierProto::Reader::hasRecordNumHistory() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool SdrClassifierProto::Builder::hasRecordNumHistory() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader SdrClassifierProto::Reader::getRecordNumHistory() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Builder SdrClassifierProto::Builder::getRecordNumHistory() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void SdrClassifierProto::Builder::setRecordNumHistory( ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline void SdrClassifierProto::Builder::setRecordNumHistory(::kj::ArrayPtr<const  ::uint32_t> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>::Builder SdrClassifierProto::Builder::initRecordNumHistory(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), size);
}
inline void SdrClassifierProto::Builder::adoptRecordNumHistory(
    ::capnp::Orphan< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>> SdrClassifierProto::Builder::disownRecordNumHistory() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint32_t,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool SdrClassifierProto::Reader::hasWeightMatrix() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool SdrClassifierProto::Builder::hasWeightMatrix() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::SdrClassifierProto::StepWeightMatrix,  ::capnp::Kind::STRUCT>::Reader SdrClassifierProto::Reader::getWeightMatrix() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::SdrClassifierProto::StepWeightMatrix,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::SdrClassifierProto::StepWeightMatrix,  ::capnp::Kind::STRUCT>::Builder SdrClassifierProto::Builder::getWeightMatrix() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::SdrClassifierProto::StepWeightMatrix,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void SdrClassifierProto::Builder::setWeightMatrix( ::capnp::List< ::SdrClassifierProto::StepWeightMatrix,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::SdrClassifierProto::StepWeightMatrix,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::SdrClassifierProto::StepWeightMatrix,  ::capnp::Kind::STRUCT>::Builder SdrClassifierProto::Builder::initWeightMatrix(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::SdrClassifierProto::StepWeightMatrix,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), size);
}
inline void SdrClassifierProto::Builder::adoptWeightMatrix(
    ::capnp::Orphan< ::capnp::List< ::SdrClassifierProto::StepWeightMatrix,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::SdrClassifierProto::StepWeightMatrix,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::SdrClassifierProto::StepWeightMatrix,  ::capnp::Kind::STRUCT>> SdrClassifierProto::Builder::disownWeightMatrix() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::SdrClassifierProto::StepWeightMatrix,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline  ::uint32_t SdrClassifierProto::Reader::getMaxBucketIdx() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t SdrClassifierProto::Builder::getMaxBucketIdx() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void SdrClassifierProto::Builder::setMaxBucketIdx( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t SdrClassifierProto::Reader::getMaxInputIdx() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t SdrClassifierProto::Builder::getMaxInputIdx() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void SdrClassifierProto::Builder::setMaxInputIdx( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline bool SdrClassifierProto::Reader::hasActualValues() const {
  return !_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline bool SdrClassifierProto::Builder::hasActualValues() {
  return !_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>::Reader SdrClassifierProto::Reader::getActualValues() const {
  return ::capnp::_::PointerHelpers< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline  ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>::Builder SdrClassifierProto::Builder::getActualValues() {
  return ::capnp::_::PointerHelpers< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline void SdrClassifierProto::Builder::setActualValues( ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), value);
}
inline void SdrClassifierProto::Builder::setActualValues(::kj::ArrayPtr<const double> value) {
  ::capnp::_::PointerHelpers< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>::Builder SdrClassifierProto::Builder::initActualValues(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), size);
}
inline void SdrClassifierProto::Builder::adoptActualValues(
    ::capnp::Orphan< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>> SdrClassifierProto::Builder::disownActualValues() {
  return ::capnp::_::PointerHelpers< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}

inline bool SdrClassifierProto::Reader::hasActualValuesSet() const {
  return !_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline bool SdrClassifierProto::Builder::hasActualValuesSet() {
  return !_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List<bool,  ::capnp::Kind::PRIMITIVE>::Reader SdrClassifierProto::Reader::getActualValuesSet() const {
  return ::capnp::_::PointerHelpers< ::capnp::List<bool,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline  ::capnp::List<bool,  ::capnp::Kind::PRIMITIVE>::Builder SdrClassifierProto::Builder::getActualValuesSet() {
  return ::capnp::_::PointerHelpers< ::capnp::List<bool,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline void SdrClassifierProto::Builder::setActualValuesSet( ::capnp::List<bool,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List<bool,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), value);
}
inline void SdrClassifierProto::Builder::setActualValuesSet(::kj::ArrayPtr<const bool> value) {
  ::capnp::_::PointerHelpers< ::capnp::List<bool,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List<bool,  ::capnp::Kind::PRIMITIVE>::Builder SdrClassifierProto::Builder::initActualValuesSet(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List<bool,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), size);
}
inline void SdrClassifierProto::Builder::adoptActualValuesSet(
    ::capnp::Orphan< ::capnp::List<bool,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List<bool,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List<bool,  ::capnp::Kind::PRIMITIVE>> SdrClassifierProto::Builder::disownActualValuesSet() {
  return ::capnp::_::PointerHelpers< ::capnp::List<bool,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}

inline  ::uint16_t SdrClassifierProto::Reader::getVersion() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t SdrClassifierProto::Builder::getVersion() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}
inline void SdrClassifierProto::Builder::setVersion( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t SdrClassifierProto::Reader::getVerbosity() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<30>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t SdrClassifierProto::Builder::getVerbosity() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<30>() * ::capnp::ELEMENTS);
}
inline void SdrClassifierProto::Builder::setVerbosity( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<30>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t SdrClassifierProto::StepWeightMatrix::Reader::getSteps() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t SdrClassifierProto::StepWeightMatrix::Builder::getSteps() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void SdrClassifierProto::StepWeightMatrix::Builder::setSteps( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool SdrClassifierProto::StepWeightMatrix::Reader::hasWeight() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool SdrClassifierProto::StepWeightMatrix::Builder::hasWeight() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>::Reader SdrClassifierProto::StepWeightMatrix::Reader::getWeight() const {
  return ::capnp::_::PointerHelpers< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>::Builder SdrClassifierProto::StepWeightMatrix::Builder::getWeight() {
  return ::capnp::_::PointerHelpers< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void SdrClassifierProto::StepWeightMatrix::Builder::setWeight( ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline void SdrClassifierProto::StepWeightMatrix::Builder::setWeight(::kj::ArrayPtr<const double> value) {
  ::capnp::_::PointerHelpers< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>::Builder SdrClassifierProto::StepWeightMatrix::Builder::initWeight(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), size);
}
inline void SdrClassifierProto::StepWeightMatrix::Builder::adoptWeight(
    ::capnp::Orphan< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>> SdrClassifierProto::StepWeightMatrix::Builder::disownWeight() {
  return ::capnp::_::PointerHelpers< ::capnp::List<double,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}


